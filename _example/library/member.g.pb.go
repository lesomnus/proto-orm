// Code generated by "proto-orm-gen-ent". DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: example/library/member.g.proto

package library

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockerAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *LockerAddRequest) Reset() {
	*x = LockerAddRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerAddRequest) ProtoMessage() {}

func (x *LockerAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockerAddRequest.ProtoReflect.Descriptor instead.
func (*LockerAddRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{0}
}

func (x *LockerAddRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type LockerGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//
	//	*LockerGetRequest_Id
	Key isLockerGetRequest_Key `protobuf_oneof:"key"`
}

func (x *LockerGetRequest) Reset() {
	*x = LockerGetRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerGetRequest) ProtoMessage() {}

func (x *LockerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockerGetRequest.ProtoReflect.Descriptor instead.
func (*LockerGetRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{1}
}

func (m *LockerGetRequest) GetKey() isLockerGetRequest_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *LockerGetRequest) GetId() []byte {
	if x, ok := x.GetKey().(*LockerGetRequest_Id); ok {
		return x.Id
	}
	return nil
}

type isLockerGetRequest_Key interface {
	isLockerGetRequest_Key()
}

type LockerGetRequest_Id struct {
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

func (*LockerGetRequest_Id) isLockerGetRequest_Key() {}

type LockerPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *LockerGetRequest `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Owner     *Member           `protobuf:"bytes,3,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	OwnerNull bool              `protobuf:"varint,4,opt,name=owner_null,json=ownerNull,proto3" json:"owner_null,omitempty"`
}

func (x *LockerPatchRequest) Reset() {
	*x = LockerPatchRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerPatchRequest) ProtoMessage() {}

func (x *LockerPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockerPatchRequest.ProtoReflect.Descriptor instead.
func (*LockerPatchRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{2}
}

func (x *LockerPatchRequest) GetKey() *LockerGetRequest {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *LockerPatchRequest) GetOwner() *Member {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *LockerPatchRequest) GetOwnerNull() bool {
	if x != nil {
		return x.OwnerNull
	}
	return false
}

type MemberAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Labels      map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Profile     *Profile               `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	Level       Member_Level           `protobuf:"varint,6,opt,name=level,proto3,enum=example.library.Member_Level" json:"level,omitempty"`
	DateCreated *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=date_created,json=dateCreated,proto3,oneof" json:"date_created,omitempty"`
}

func (x *MemberAddRequest) Reset() {
	*x = MemberAddRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAddRequest) ProtoMessage() {}

func (x *MemberAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAddRequest.ProtoReflect.Descriptor instead.
func (*MemberAddRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{3}
}

func (x *MemberAddRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MemberAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberAddRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MemberAddRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *MemberAddRequest) GetLevel() Member_Level {
	if x != nil {
		return x.Level
	}
	return Member_LEVEL_BRONZE
}

func (x *MemberAddRequest) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.DateCreated
	}
	return nil
}

type MemberGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//
	//	*MemberGetRequest_Id
	Key isMemberGetRequest_Key `protobuf_oneof:"key"`
}

func (x *MemberGetRequest) Reset() {
	*x = MemberGetRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberGetRequest) ProtoMessage() {}

func (x *MemberGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberGetRequest.ProtoReflect.Descriptor instead.
func (*MemberGetRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{4}
}

func (m *MemberGetRequest) GetKey() isMemberGetRequest_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *MemberGetRequest) GetId() []byte {
	if x, ok := x.GetKey().(*MemberGetRequest_Id); ok {
		return x.Id
	}
	return nil
}

type isMemberGetRequest_Key interface {
	isMemberGetRequest_Key()
}

type MemberGetRequest_Id struct {
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

func (*MemberGetRequest_Id) isMemberGetRequest_Key() {}

type MemberPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *MemberGetRequest `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name       *string           `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Labels     map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Profile    *Profile          `protobuf:"bytes,9,opt,name=profile,proto3,oneof" json:"profile,omitempty"`
	Level      *Member_Level     `protobuf:"varint,11,opt,name=level,proto3,enum=example.library.Member_Level,oneof" json:"level,omitempty"`
	Locker     *Locker           `protobuf:"bytes,13,opt,name=locker,proto3,oneof" json:"locker,omitempty"`
	LockerNull bool              `protobuf:"varint,14,opt,name=locker_null,json=lockerNull,proto3" json:"locker_null,omitempty"`
}

func (x *MemberPatchRequest) Reset() {
	*x = MemberPatchRequest{}
	mi := &file_example_library_member_g_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPatchRequest) ProtoMessage() {}

func (x *MemberPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_g_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPatchRequest.ProtoReflect.Descriptor instead.
func (*MemberPatchRequest) Descriptor() ([]byte, []int) {
	return file_example_library_member_g_proto_rawDescGZIP(), []int{5}
}

func (x *MemberPatchRequest) GetKey() *MemberGetRequest {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *MemberPatchRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MemberPatchRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MemberPatchRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *MemberPatchRequest) GetLevel() Member_Level {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Member_LEVEL_BRONZE
}

func (x *MemberPatchRequest) GetLocker() *Locker {
	if x != nil {
		return x.Locker
	}
	return nil
}

func (x *MemberPatchRequest) GetLockerNull() bool {
	if x != nil {
		return x.LockerNull
	}
	return false
}

var File_example_library_member_g_proto protoreflect.FileDescriptor

var file_example_library_member_g_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x1a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x10,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x10,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x82, 0x03, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x42, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x2b, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x05, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0xda, 0x03, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x01, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x03,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x32, 0x9f, 0x02, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x05, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x42, 0x0a, 0x05, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0x9f, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x05, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x42, 0x0a, 0x05, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x6f, 0x6d, 0x6e, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x6d, 0x2f, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_library_member_g_proto_rawDescOnce sync.Once
	file_example_library_member_g_proto_rawDescData = file_example_library_member_g_proto_rawDesc
)

func file_example_library_member_g_proto_rawDescGZIP() []byte {
	file_example_library_member_g_proto_rawDescOnce.Do(func() {
		file_example_library_member_g_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_library_member_g_proto_rawDescData)
	})
	return file_example_library_member_g_proto_rawDescData
}

var file_example_library_member_g_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_example_library_member_g_proto_goTypes = []any{
	(*LockerAddRequest)(nil),      // 0: example.library.LockerAddRequest
	(*LockerGetRequest)(nil),      // 1: example.library.LockerGetRequest
	(*LockerPatchRequest)(nil),    // 2: example.library.LockerPatchRequest
	(*MemberAddRequest)(nil),      // 3: example.library.MemberAddRequest
	(*MemberGetRequest)(nil),      // 4: example.library.MemberGetRequest
	(*MemberPatchRequest)(nil),    // 5: example.library.MemberPatchRequest
	nil,                           // 6: example.library.MemberAddRequest.LabelsEntry
	nil,                           // 7: example.library.MemberPatchRequest.LabelsEntry
	(*Member)(nil),                // 8: example.library.Member
	(*Profile)(nil),               // 9: example.library.Profile
	(Member_Level)(0),             // 10: example.library.Member.Level
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*Locker)(nil),                // 12: example.library.Locker
	(*emptypb.Empty)(nil),         // 13: google.protobuf.Empty
}
var file_example_library_member_g_proto_depIdxs = []int32{
	1,  // 0: example.library.LockerPatchRequest.key:type_name -> example.library.LockerGetRequest
	8,  // 1: example.library.LockerPatchRequest.owner:type_name -> example.library.Member
	6,  // 2: example.library.MemberAddRequest.labels:type_name -> example.library.MemberAddRequest.LabelsEntry
	9,  // 3: example.library.MemberAddRequest.profile:type_name -> example.library.Profile
	10, // 4: example.library.MemberAddRequest.level:type_name -> example.library.Member.Level
	11, // 5: example.library.MemberAddRequest.date_created:type_name -> google.protobuf.Timestamp
	4,  // 6: example.library.MemberPatchRequest.key:type_name -> example.library.MemberGetRequest
	7,  // 7: example.library.MemberPatchRequest.labels:type_name -> example.library.MemberPatchRequest.LabelsEntry
	9,  // 8: example.library.MemberPatchRequest.profile:type_name -> example.library.Profile
	10, // 9: example.library.MemberPatchRequest.level:type_name -> example.library.Member.Level
	12, // 10: example.library.MemberPatchRequest.locker:type_name -> example.library.Locker
	0,  // 11: example.library.LockerService.Add:input_type -> example.library.LockerAddRequest
	1,  // 12: example.library.LockerService.Get:input_type -> example.library.LockerGetRequest
	2,  // 13: example.library.LockerService.Patch:input_type -> example.library.LockerPatchRequest
	1,  // 14: example.library.LockerService.Erase:input_type -> example.library.LockerGetRequest
	3,  // 15: example.library.MemberService.Add:input_type -> example.library.MemberAddRequest
	4,  // 16: example.library.MemberService.Get:input_type -> example.library.MemberGetRequest
	5,  // 17: example.library.MemberService.Patch:input_type -> example.library.MemberPatchRequest
	4,  // 18: example.library.MemberService.Erase:input_type -> example.library.MemberGetRequest
	12, // 19: example.library.LockerService.Add:output_type -> example.library.Locker
	12, // 20: example.library.LockerService.Get:output_type -> example.library.Locker
	13, // 21: example.library.LockerService.Patch:output_type -> google.protobuf.Empty
	13, // 22: example.library.LockerService.Erase:output_type -> google.protobuf.Empty
	8,  // 23: example.library.MemberService.Add:output_type -> example.library.Member
	8,  // 24: example.library.MemberService.Get:output_type -> example.library.Member
	13, // 25: example.library.MemberService.Patch:output_type -> google.protobuf.Empty
	13, // 26: example.library.MemberService.Erase:output_type -> google.protobuf.Empty
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_example_library_member_g_proto_init() }
func file_example_library_member_g_proto_init() {
	if File_example_library_member_g_proto != nil {
		return
	}
	file_example_library_member_proto_init()
	file_example_library_profile_proto_init()
	file_example_library_member_g_proto_msgTypes[0].OneofWrappers = []any{}
	file_example_library_member_g_proto_msgTypes[1].OneofWrappers = []any{
		(*LockerGetRequest_Id)(nil),
	}
	file_example_library_member_g_proto_msgTypes[2].OneofWrappers = []any{}
	file_example_library_member_g_proto_msgTypes[3].OneofWrappers = []any{}
	file_example_library_member_g_proto_msgTypes[4].OneofWrappers = []any{
		(*MemberGetRequest_Id)(nil),
	}
	file_example_library_member_g_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_library_member_g_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_example_library_member_g_proto_goTypes,
		DependencyIndexes: file_example_library_member_g_proto_depIdxs,
		MessageInfos:      file_example_library_member_g_proto_msgTypes,
	}.Build()
	File_example_library_member_g_proto = out.File
	file_example_library_member_g_proto_rawDesc = nil
	file_example_library_member_g_proto_goTypes = nil
	file_example_library_member_g_proto_depIdxs = nil
}
