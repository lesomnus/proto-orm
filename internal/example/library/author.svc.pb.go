// Code generated by "proto-orm-gen-ent". DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.0
// source: example/library/author.svc.proto

package library

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorAddRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
	xxx_hidden_Alias       string                 `protobuf:"bytes,2,opt,name=alias,proto3"`
	xxx_hidden_Name        string                 `protobuf:"bytes,3,opt,name=name,proto3"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profile     *Profile               `protobuf:"bytes,5,opt,name=profile,proto3,oneof"`
	xxx_hidden_DateCreated *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=date_created,json=dateCreated,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AuthorAddRequest) Reset() {
	*x = AuthorAddRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorAddRequest) ProtoMessage() {}

func (x *AuthorAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthorAddRequest) GetId() []byte {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *AuthorAddRequest) GetAlias() string {
	if x != nil {
		return x.xxx_hidden_Alias
	}
	return ""
}

func (x *AuthorAddRequest) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *AuthorAddRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *AuthorAddRequest) GetProfile() *Profile {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *AuthorAddRequest) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *AuthorAddRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *AuthorAddRequest) SetAlias(v string) {
	x.xxx_hidden_Alias = v
}

func (x *AuthorAddRequest) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *AuthorAddRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *AuthorAddRequest) SetProfile(v *Profile) {
	x.xxx_hidden_Profile = v
}

func (x *AuthorAddRequest) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *AuthorAddRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthorAddRequest) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *AuthorAddRequest) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *AuthorAddRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *AuthorAddRequest) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

func (x *AuthorAddRequest) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

type AuthorAddRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          []byte
	Alias       string
	Name        string
	Labels      map[string]string
	Profile     *Profile
	DateCreated *timestamppb.Timestamp
}

func (b0 AuthorAddRequest_builder) Build() *AuthorAddRequest {
	m0 := &AuthorAddRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Alias = b.Alias
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type AuthorGetRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Select *AuthorSelect          `protobuf:"bytes,1,opt,name=select,proto3"`
	xxx_hidden_Key    isAuthorGetRequest_Key `protobuf_oneof:"key"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AuthorGetRequest) Reset() {
	*x = AuthorGetRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorGetRequest) ProtoMessage() {}

func (x *AuthorGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthorGetRequest) GetSelect() *AuthorSelect {
	if x != nil {
		return x.xxx_hidden_Select
	}
	return nil
}

func (x *AuthorGetRequest) GetId() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*authorGetRequest_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *AuthorGetRequest) GetAlias() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*authorGetRequest_Alias); ok {
			return x.Alias
		}
	}
	return ""
}

func (x *AuthorGetRequest) SetSelect(v *AuthorSelect) {
	x.xxx_hidden_Select = v
}

func (x *AuthorGetRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Key = &authorGetRequest_Id{v}
}

func (x *AuthorGetRequest) SetAlias(v string) {
	x.xxx_hidden_Key = &authorGetRequest_Alias{v}
}

func (x *AuthorGetRequest) HasSelect() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Select != nil
}

func (x *AuthorGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *AuthorGetRequest) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*authorGetRequest_Id)
	return ok
}

func (x *AuthorGetRequest) HasAlias() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*authorGetRequest_Alias)
	return ok
}

func (x *AuthorGetRequest) ClearSelect() {
	x.xxx_hidden_Select = nil
}

func (x *AuthorGetRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *AuthorGetRequest) ClearId() {
	if _, ok := x.xxx_hidden_Key.(*authorGetRequest_Id); ok {
		x.xxx_hidden_Key = nil
	}
}

func (x *AuthorGetRequest) ClearAlias() {
	if _, ok := x.xxx_hidden_Key.(*authorGetRequest_Alias); ok {
		x.xxx_hidden_Key = nil
	}
}

const AuthorGetRequest_Key_not_set_case case_AuthorGetRequest_Key = 0
const AuthorGetRequest_Id_case case_AuthorGetRequest_Key = 2
const AuthorGetRequest_Alias_case case_AuthorGetRequest_Key = 3

func (x *AuthorGetRequest) WhichKey() case_AuthorGetRequest_Key {
	if x == nil {
		return AuthorGetRequest_Key_not_set_case
	}
	switch x.xxx_hidden_Key.(type) {
	case *authorGetRequest_Id:
		return AuthorGetRequest_Id_case
	case *authorGetRequest_Alias:
		return AuthorGetRequest_Alias_case
	default:
		return AuthorGetRequest_Key_not_set_case
	}
}

type AuthorGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Select *AuthorSelect
	// Fields of oneof xxx_hidden_Key:
	Id    []byte
	Alias *string
	// -- end of xxx_hidden_Key
}

func (b0 AuthorGetRequest_builder) Build() *AuthorGetRequest {
	m0 := &AuthorGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Select = b.Select
	if b.Id != nil {
		x.xxx_hidden_Key = &authorGetRequest_Id{b.Id}
	}
	if b.Alias != nil {
		x.xxx_hidden_Key = &authorGetRequest_Alias{*b.Alias}
	}
	return m0
}

type case_AuthorGetRequest_Key protoreflect.FieldNumber

func (x case_AuthorGetRequest_Key) String() string {
	md := file_example_library_author_svc_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAuthorGetRequest_Key interface {
	isAuthorGetRequest_Key()
}

type authorGetRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type authorGetRequest_Alias struct {
	Alias string `protobuf:"bytes,3,opt,name=alias,proto3,oneof"`
}

func (*authorGetRequest_Id) isAuthorGetRequest_Key() {}

func (*authorGetRequest_Alias) isAuthorGetRequest_Key() {}

type AuthorSelect struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_All         bool                   `protobuf:"varint,1,opt,name=all,proto3,oneof"`
	xxx_hidden_Alias       bool                   `protobuf:"varint,2,opt,name=alias,proto3"`
	xxx_hidden_Name        bool                   `protobuf:"varint,3,opt,name=name,proto3"`
	xxx_hidden_Labels      bool                   `protobuf:"varint,4,opt,name=labels,proto3"`
	xxx_hidden_Profile     bool                   `protobuf:"varint,5,opt,name=profile,proto3"`
	xxx_hidden_Books       *BookSelect            `protobuf:"bytes,7,opt,name=books,proto3,oneof"`
	xxx_hidden_DateCreated bool                   `protobuf:"varint,15,opt,name=date_created,json=dateCreated,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AuthorSelect) Reset() {
	*x = AuthorSelect{}
	mi := &file_example_library_author_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorSelect) ProtoMessage() {}

func (x *AuthorSelect) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthorSelect) GetAll() bool {
	if x != nil {
		return x.xxx_hidden_All
	}
	return false
}

func (x *AuthorSelect) GetAlias() bool {
	if x != nil {
		return x.xxx_hidden_Alias
	}
	return false
}

func (x *AuthorSelect) GetName() bool {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return false
}

func (x *AuthorSelect) GetLabels() bool {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return false
}

func (x *AuthorSelect) GetProfile() bool {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return false
}

func (x *AuthorSelect) GetBooks() *BookSelect {
	if x != nil {
		return x.xxx_hidden_Books
	}
	return nil
}

func (x *AuthorSelect) GetDateCreated() bool {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return false
}

func (x *AuthorSelect) SetAll(v bool) {
	x.xxx_hidden_All = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *AuthorSelect) SetAlias(v bool) {
	x.xxx_hidden_Alias = v
}

func (x *AuthorSelect) SetName(v bool) {
	x.xxx_hidden_Name = v
}

func (x *AuthorSelect) SetLabels(v bool) {
	x.xxx_hidden_Labels = v
}

func (x *AuthorSelect) SetProfile(v bool) {
	x.xxx_hidden_Profile = v
}

func (x *AuthorSelect) SetBooks(v *BookSelect) {
	x.xxx_hidden_Books = v
}

func (x *AuthorSelect) SetDateCreated(v bool) {
	x.xxx_hidden_DateCreated = v
}

func (x *AuthorSelect) HasAll() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthorSelect) HasBooks() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Books != nil
}

func (x *AuthorSelect) ClearAll() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_All = false
}

func (x *AuthorSelect) ClearBooks() {
	x.xxx_hidden_Books = nil
}

type AuthorSelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	All         *bool
	Alias       bool
	Name        bool
	Labels      bool
	Profile     bool
	Books       *BookSelect
	DateCreated bool
}

func (b0 AuthorSelect_builder) Build() *AuthorSelect {
	m0 := &AuthorSelect{}
	b, x := &b0, m0
	_, _ = b, x
	if b.All != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_All = *b.All
	}
	x.xxx_hidden_Alias = b.Alias
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_Books = b.Books
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type AuthorPatchRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *AuthorGetRequest      `protobuf:"bytes,1,opt,name=key,proto3"`
	xxx_hidden_Alias       *string                `protobuf:"bytes,3,opt,name=alias,proto3,oneof"`
	xxx_hidden_Name        *string                `protobuf:"bytes,5,opt,name=name,proto3,oneof"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profile     *Profile               `protobuf:"bytes,9,opt,name=profile,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AuthorPatchRequest) Reset() {
	*x = AuthorPatchRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorPatchRequest) ProtoMessage() {}

func (x *AuthorPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthorPatchRequest) GetKey() *AuthorGetRequest {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *AuthorPatchRequest) GetAlias() string {
	if x != nil {
		if x.xxx_hidden_Alias != nil {
			return *x.xxx_hidden_Alias
		}
		return ""
	}
	return ""
}

func (x *AuthorPatchRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AuthorPatchRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *AuthorPatchRequest) GetProfile() *Profile {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *AuthorPatchRequest) SetKey(v *AuthorGetRequest) {
	x.xxx_hidden_Key = v
}

func (x *AuthorPatchRequest) SetAlias(v string) {
	x.xxx_hidden_Alias = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *AuthorPatchRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *AuthorPatchRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *AuthorPatchRequest) SetProfile(v *Profile) {
	x.xxx_hidden_Profile = v
}

func (x *AuthorPatchRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *AuthorPatchRequest) HasAlias() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthorPatchRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuthorPatchRequest) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *AuthorPatchRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *AuthorPatchRequest) ClearAlias() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Alias = nil
}

func (x *AuthorPatchRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *AuthorPatchRequest) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

type AuthorPatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key     *AuthorGetRequest
	Alias   *string
	Name    *string
	Labels  map[string]string
	Profile *Profile
}

func (b0 AuthorPatchRequest_builder) Build() *AuthorPatchRequest {
	m0 := &AuthorPatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	if b.Alias != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Alias = b.Alias
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	return m0
}

type BookAddRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
	xxx_hidden_Title       string                 `protobuf:"bytes,3,opt,name=title,proto3"`
	xxx_hidden_Index       *[]*Book_Index         `protobuf:"bytes,5,rep,name=index,proto3"`
	xxx_hidden_Genres      []string               `protobuf:"bytes,6,rep,name=genres,proto3"`
	xxx_hidden_DateCreated *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=date_created,json=dateCreated,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BookAddRequest) Reset() {
	*x = BookAddRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookAddRequest) ProtoMessage() {}

func (x *BookAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BookAddRequest) GetId() []byte {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *BookAddRequest) GetTitle() string {
	if x != nil {
		return x.xxx_hidden_Title
	}
	return ""
}

func (x *BookAddRequest) GetIndex() []*Book_Index {
	if x != nil {
		if x.xxx_hidden_Index != nil {
			return *x.xxx_hidden_Index
		}
	}
	return nil
}

func (x *BookAddRequest) GetGenres() []string {
	if x != nil {
		return x.xxx_hidden_Genres
	}
	return nil
}

func (x *BookAddRequest) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *BookAddRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *BookAddRequest) SetTitle(v string) {
	x.xxx_hidden_Title = v
}

func (x *BookAddRequest) SetIndex(v []*Book_Index) {
	x.xxx_hidden_Index = &v
}

func (x *BookAddRequest) SetGenres(v []string) {
	x.xxx_hidden_Genres = v
}

func (x *BookAddRequest) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *BookAddRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BookAddRequest) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *BookAddRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *BookAddRequest) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

type BookAddRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          []byte
	Title       string
	Index       []*Book_Index
	Genres      []string
	DateCreated *timestamppb.Timestamp
}

func (b0 BookAddRequest_builder) Build() *BookAddRequest {
	m0 := &BookAddRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Title = b.Title
	x.xxx_hidden_Index = &b.Index
	x.xxx_hidden_Genres = b.Genres
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type BookGetRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Select *BookSelect            `protobuf:"bytes,1,opt,name=select,proto3"`
	xxx_hidden_Key    isBookGetRequest_Key   `protobuf_oneof:"key"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BookGetRequest) Reset() {
	*x = BookGetRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookGetRequest) ProtoMessage() {}

func (x *BookGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BookGetRequest) GetSelect() *BookSelect {
	if x != nil {
		return x.xxx_hidden_Select
	}
	return nil
}

func (x *BookGetRequest) GetId() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*bookGetRequest_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *BookGetRequest) SetSelect(v *BookSelect) {
	x.xxx_hidden_Select = v
}

func (x *BookGetRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Key = &bookGetRequest_Id{v}
}

func (x *BookGetRequest) HasSelect() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Select != nil
}

func (x *BookGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *BookGetRequest) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*bookGetRequest_Id)
	return ok
}

func (x *BookGetRequest) ClearSelect() {
	x.xxx_hidden_Select = nil
}

func (x *BookGetRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *BookGetRequest) ClearId() {
	if _, ok := x.xxx_hidden_Key.(*bookGetRequest_Id); ok {
		x.xxx_hidden_Key = nil
	}
}

const BookGetRequest_Key_not_set_case case_BookGetRequest_Key = 0
const BookGetRequest_Id_case case_BookGetRequest_Key = 2

func (x *BookGetRequest) WhichKey() case_BookGetRequest_Key {
	if x == nil {
		return BookGetRequest_Key_not_set_case
	}
	switch x.xxx_hidden_Key.(type) {
	case *bookGetRequest_Id:
		return BookGetRequest_Id_case
	default:
		return BookGetRequest_Key_not_set_case
	}
}

type BookGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Select *BookSelect
	// Fields of oneof xxx_hidden_Key:
	Id []byte
	// -- end of xxx_hidden_Key
}

func (b0 BookGetRequest_builder) Build() *BookGetRequest {
	m0 := &BookGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Select = b.Select
	if b.Id != nil {
		x.xxx_hidden_Key = &bookGetRequest_Id{b.Id}
	}
	return m0
}

type case_BookGetRequest_Key protoreflect.FieldNumber

func (x case_BookGetRequest_Key) String() string {
	md := file_example_library_author_svc_proto_msgTypes[5].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBookGetRequest_Key interface {
	isBookGetRequest_Key()
}

type bookGetRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*bookGetRequest_Id) isBookGetRequest_Key() {}

type BookSelect struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_All         bool                   `protobuf:"varint,1,opt,name=all,proto3,oneof"`
	xxx_hidden_Title       bool                   `protobuf:"varint,3,opt,name=title,proto3"`
	xxx_hidden_Authors     *AuthorSelect          `protobuf:"bytes,4,opt,name=authors,proto3,oneof"`
	xxx_hidden_Index       bool                   `protobuf:"varint,5,opt,name=index,proto3"`
	xxx_hidden_Genres      bool                   `protobuf:"varint,6,opt,name=genres,proto3"`
	xxx_hidden_DateCreated bool                   `protobuf:"varint,15,opt,name=date_created,json=dateCreated,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BookSelect) Reset() {
	*x = BookSelect{}
	mi := &file_example_library_author_svc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookSelect) ProtoMessage() {}

func (x *BookSelect) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BookSelect) GetAll() bool {
	if x != nil {
		return x.xxx_hidden_All
	}
	return false
}

func (x *BookSelect) GetTitle() bool {
	if x != nil {
		return x.xxx_hidden_Title
	}
	return false
}

func (x *BookSelect) GetAuthors() *AuthorSelect {
	if x != nil {
		return x.xxx_hidden_Authors
	}
	return nil
}

func (x *BookSelect) GetIndex() bool {
	if x != nil {
		return x.xxx_hidden_Index
	}
	return false
}

func (x *BookSelect) GetGenres() bool {
	if x != nil {
		return x.xxx_hidden_Genres
	}
	return false
}

func (x *BookSelect) GetDateCreated() bool {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return false
}

func (x *BookSelect) SetAll(v bool) {
	x.xxx_hidden_All = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *BookSelect) SetTitle(v bool) {
	x.xxx_hidden_Title = v
}

func (x *BookSelect) SetAuthors(v *AuthorSelect) {
	x.xxx_hidden_Authors = v
}

func (x *BookSelect) SetIndex(v bool) {
	x.xxx_hidden_Index = v
}

func (x *BookSelect) SetGenres(v bool) {
	x.xxx_hidden_Genres = v
}

func (x *BookSelect) SetDateCreated(v bool) {
	x.xxx_hidden_DateCreated = v
}

func (x *BookSelect) HasAll() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *BookSelect) HasAuthors() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Authors != nil
}

func (x *BookSelect) ClearAll() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_All = false
}

func (x *BookSelect) ClearAuthors() {
	x.xxx_hidden_Authors = nil
}

type BookSelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	All         *bool
	Title       bool
	Authors     *AuthorSelect
	Index       bool
	Genres      bool
	DateCreated bool
}

func (b0 BookSelect_builder) Build() *BookSelect {
	m0 := &BookSelect{}
	b, x := &b0, m0
	_, _ = b, x
	if b.All != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_All = *b.All
	}
	x.xxx_hidden_Title = b.Title
	x.xxx_hidden_Authors = b.Authors
	x.xxx_hidden_Index = b.Index
	x.xxx_hidden_Genres = b.Genres
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type BookPatchRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *BookGetRequest        `protobuf:"bytes,1,opt,name=key,proto3"`
	xxx_hidden_Title       *string                `protobuf:"bytes,5,opt,name=title,proto3,oneof"`
	xxx_hidden_Index       *[]*Book_Index         `protobuf:"bytes,9,rep,name=index,proto3"`
	xxx_hidden_Genres      []string               `protobuf:"bytes,11,rep,name=genres,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BookPatchRequest) Reset() {
	*x = BookPatchRequest{}
	mi := &file_example_library_author_svc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookPatchRequest) ProtoMessage() {}

func (x *BookPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_author_svc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BookPatchRequest) GetKey() *BookGetRequest {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *BookPatchRequest) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *BookPatchRequest) GetIndex() []*Book_Index {
	if x != nil {
		if x.xxx_hidden_Index != nil {
			return *x.xxx_hidden_Index
		}
	}
	return nil
}

func (x *BookPatchRequest) GetGenres() []string {
	if x != nil {
		return x.xxx_hidden_Genres
	}
	return nil
}

func (x *BookPatchRequest) SetKey(v *BookGetRequest) {
	x.xxx_hidden_Key = v
}

func (x *BookPatchRequest) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *BookPatchRequest) SetIndex(v []*Book_Index) {
	x.xxx_hidden_Index = &v
}

func (x *BookPatchRequest) SetGenres(v []string) {
	x.xxx_hidden_Genres = v
}

func (x *BookPatchRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *BookPatchRequest) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *BookPatchRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *BookPatchRequest) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Title = nil
}

type BookPatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key    *BookGetRequest
	Title  *string
	Index  []*Book_Index
	Genres []string
}

func (b0 BookPatchRequest_builder) Build() *BookPatchRequest {
	m0 := &BookPatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Title = b.Title
	}
	x.xxx_hidden_Index = &b.Index
	x.xxx_hidden_Genres = b.Genres
	return m0
}

var File_example_library_author_svc_proto protoreflect.FileDescriptor

var file_example_library_author_svc_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x1a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4,
	0x02, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x7a, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0xee, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x48, 0x01, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x6c, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x6f, 0x6f,
	0x6b, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x19,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xe2,
	0x01, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48,
	0x01, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x61, 0x6c, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x32, 0x9f, 0x02, 0x0a, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x44, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x45, 0x72, 0x61, 0x73,
	0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x91, 0x02, 0x0a,
	0x0b, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x3d, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x42, 0x0a, 0x05, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40,
	0x0a, 0x05, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x65, 0x73, 0x6f, 0x6d, 0x6e, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72,
	0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var file_example_library_author_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_example_library_author_svc_proto_goTypes = []any{
	(*AuthorAddRequest)(nil),      // 0: example.library.AuthorAddRequest
	(*AuthorGetRequest)(nil),      // 1: example.library.AuthorGetRequest
	(*AuthorSelect)(nil),          // 2: example.library.AuthorSelect
	(*AuthorPatchRequest)(nil),    // 3: example.library.AuthorPatchRequest
	(*BookAddRequest)(nil),        // 4: example.library.BookAddRequest
	(*BookGetRequest)(nil),        // 5: example.library.BookGetRequest
	(*BookSelect)(nil),            // 6: example.library.BookSelect
	(*BookPatchRequest)(nil),      // 7: example.library.BookPatchRequest
	nil,                           // 8: example.library.AuthorAddRequest.LabelsEntry
	nil,                           // 9: example.library.AuthorPatchRequest.LabelsEntry
	(*Profile)(nil),               // 10: example.library.Profile
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*Book_Index)(nil),            // 12: example.library.Book.Index
	(*Author)(nil),                // 13: example.library.Author
	(*emptypb.Empty)(nil),         // 14: google.protobuf.Empty
	(*Book)(nil),                  // 15: example.library.Book
}
var file_example_library_author_svc_proto_depIdxs = []int32{
	8,  // 0: example.library.AuthorAddRequest.labels:type_name -> example.library.AuthorAddRequest.LabelsEntry
	10, // 1: example.library.AuthorAddRequest.profile:type_name -> example.library.Profile
	11, // 2: example.library.AuthorAddRequest.date_created:type_name -> google.protobuf.Timestamp
	2,  // 3: example.library.AuthorGetRequest.select:type_name -> example.library.AuthorSelect
	6,  // 4: example.library.AuthorSelect.books:type_name -> example.library.BookSelect
	1,  // 5: example.library.AuthorPatchRequest.key:type_name -> example.library.AuthorGetRequest
	9,  // 6: example.library.AuthorPatchRequest.labels:type_name -> example.library.AuthorPatchRequest.LabelsEntry
	10, // 7: example.library.AuthorPatchRequest.profile:type_name -> example.library.Profile
	12, // 8: example.library.BookAddRequest.index:type_name -> example.library.Book.Index
	11, // 9: example.library.BookAddRequest.date_created:type_name -> google.protobuf.Timestamp
	6,  // 10: example.library.BookGetRequest.select:type_name -> example.library.BookSelect
	2,  // 11: example.library.BookSelect.authors:type_name -> example.library.AuthorSelect
	5,  // 12: example.library.BookPatchRequest.key:type_name -> example.library.BookGetRequest
	12, // 13: example.library.BookPatchRequest.index:type_name -> example.library.Book.Index
	0,  // 14: example.library.AuthorService.Add:input_type -> example.library.AuthorAddRequest
	1,  // 15: example.library.AuthorService.Get:input_type -> example.library.AuthorGetRequest
	3,  // 16: example.library.AuthorService.Patch:input_type -> example.library.AuthorPatchRequest
	1,  // 17: example.library.AuthorService.Erase:input_type -> example.library.AuthorGetRequest
	4,  // 18: example.library.BookService.Add:input_type -> example.library.BookAddRequest
	5,  // 19: example.library.BookService.Get:input_type -> example.library.BookGetRequest
	7,  // 20: example.library.BookService.Patch:input_type -> example.library.BookPatchRequest
	5,  // 21: example.library.BookService.Erase:input_type -> example.library.BookGetRequest
	13, // 22: example.library.AuthorService.Add:output_type -> example.library.Author
	13, // 23: example.library.AuthorService.Get:output_type -> example.library.Author
	14, // 24: example.library.AuthorService.Patch:output_type -> google.protobuf.Empty
	14, // 25: example.library.AuthorService.Erase:output_type -> google.protobuf.Empty
	15, // 26: example.library.BookService.Add:output_type -> example.library.Book
	15, // 27: example.library.BookService.Get:output_type -> example.library.Book
	14, // 28: example.library.BookService.Patch:output_type -> google.protobuf.Empty
	14, // 29: example.library.BookService.Erase:output_type -> google.protobuf.Empty
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_example_library_author_svc_proto_init() }
func file_example_library_author_svc_proto_init() {
	if File_example_library_author_svc_proto != nil {
		return
	}
	file_example_library_author_proto_init()
	file_example_library_profile_proto_init()
	file_example_library_author_svc_proto_msgTypes[0].OneofWrappers = []any{}
	file_example_library_author_svc_proto_msgTypes[1].OneofWrappers = []any{
		(*authorGetRequest_Id)(nil),
		(*authorGetRequest_Alias)(nil),
	}
	file_example_library_author_svc_proto_msgTypes[2].OneofWrappers = []any{}
	file_example_library_author_svc_proto_msgTypes[3].OneofWrappers = []any{}
	file_example_library_author_svc_proto_msgTypes[4].OneofWrappers = []any{}
	file_example_library_author_svc_proto_msgTypes[5].OneofWrappers = []any{
		(*bookGetRequest_Id)(nil),
	}
	file_example_library_author_svc_proto_msgTypes[6].OneofWrappers = []any{}
	file_example_library_author_svc_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_example_library_author_svc_proto_rawDesc), len(file_example_library_author_svc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_example_library_author_svc_proto_goTypes,
		DependencyIndexes: file_example_library_author_svc_proto_depIdxs,
		MessageInfos:      file_example_library_author_svc_proto_msgTypes,
	}.Build()
	File_example_library_author_svc_proto = out.File
	file_example_library_author_svc_proto_goTypes = nil
	file_example_library_author_svc_proto_depIdxs = nil
}
