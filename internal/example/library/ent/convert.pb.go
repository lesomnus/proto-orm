// Code generated by "protoc-gen-orm-ent". DO NOT EDIT

package ent

import (
	library "github.com/lesomnus/proto-orm/internal/example/library"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

func (e *Author) Proto() *library.Author {
	m := &library.Author{}
	m.SetId(e.ID[:])
	m.SetAlias(e.Alias)
	m.SetName(e.Name)
	m.SetLabels(e.Labels)
	m.SetProfile(e.Profile)
	m.SetBooks(func() []*library.Book {
		ts := e.Edges.Books
		vs := make([]*library.Book, len(ts))
		for i, t := range ts {
			vs[i] = t.Proto()
		}
		return vs
	}())
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}

func (e *Book) Proto() *library.Book {
	m := &library.Book{}
	m.SetId(e.ID[:])
	m.SetTitle(e.Title)
	m.SetAuthors(func() []*library.Author {
		ts := e.Edges.Authors
		vs := make([]*library.Author, len(ts))
		for i, t := range ts {
			vs[i] = t.Proto()
		}
		return vs
	}())
	m.SetIndex(e.Index)
	m.SetGenres(e.Genres)
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}

func (e *Like) Proto() *library.Like {
	m := &library.Like{}
	m.SetId(e.ID[:])
	m.SetSubjectId(e.SubjectID[:])
	if v := e.Edges.Subject; v != nil {
		m.SetSubject(v.Proto())
	}
	if v := e.Edges.Actor; v != nil {
		m.SetActor(v.Proto())
	}
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}

func (e *Loan) Proto() *library.Loan {
	m := &library.Loan{}
	m.SetId(e.ID[:])
	m.SetSubjectId(e.SubjectID[:])
	if v := e.Edges.Subject; v != nil {
		m.SetSubject(v.Proto())
	}
	m.SetBorrowerId(e.BorrowerID[:])
	if v := e.Edges.Borrower; v != nil {
		m.SetBorrower(v.Proto())
	}
	m.SetDateDue(timestamppb.New(e.DateDue))
	if v := e.DateReturn; v != nil {
		m.SetDateReturn(timestamppb.New(*e.DateReturn))
	}
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}

func (e *Locker) Proto() *library.Locker {
	m := &library.Locker{}
	m.SetId(e.ID[:])
	if v := e.Edges.Owner; v != nil {
		m.SetOwner(v.Proto())
	}

	return m
}

func (e *Member) Proto() *library.Member {
	m := &library.Member{}
	m.SetId(e.ID[:])
	m.SetName(e.Name)
	m.SetLabels(e.Labels)
	m.SetProfile(e.Profile)
	m.SetLevel(library.Member_Level(e.Level))
	if v := e.Edges.Locker; v != nil {
		m.SetLocker(v.Proto())
	}
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}

func (e *Press) Proto() *library.Press {
	m := &library.Press{}
	m.SetId(e.ID[:])
	if v := e.Edges.Book; v != nil {
		m.SetBook(v.Proto())
	}
	m.SetSerialNumber(e.SerialNumber)
	m.SetDateCreated(timestamppb.New(e.DateCreated))

	return m
}
