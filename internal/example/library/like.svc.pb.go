// Code generated by "proto-orm-gen-ent". DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.29.0
// source: example/library/like.svc.proto

package library

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeAddRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	xxx_hidden_Subject     *BookGetRequest        `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	xxx_hidden_Actor       *MemberGetRequest      `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	xxx_hidden_DateCreated *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=date_created,json=dateCreated,proto3,oneof" json:"date_created,omitempty"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LikeAddRequest) Reset() {
	*x = LikeAddRequest{}
	mi := &file_example_library_like_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAddRequest) ProtoMessage() {}

func (x *LikeAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_like_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LikeAddRequest) GetId() []byte {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *LikeAddRequest) GetSubject() *BookGetRequest {
	if x != nil {
		return x.xxx_hidden_Subject
	}
	return nil
}

func (x *LikeAddRequest) GetActor() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Actor
	}
	return nil
}

func (x *LikeAddRequest) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *LikeAddRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *LikeAddRequest) SetSubject(v *BookGetRequest) {
	x.xxx_hidden_Subject = v
}

func (x *LikeAddRequest) SetActor(v *MemberGetRequest) {
	x.xxx_hidden_Actor = v
}

func (x *LikeAddRequest) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *LikeAddRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LikeAddRequest) HasSubject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subject != nil
}

func (x *LikeAddRequest) HasActor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Actor != nil
}

func (x *LikeAddRequest) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *LikeAddRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *LikeAddRequest) ClearSubject() {
	x.xxx_hidden_Subject = nil
}

func (x *LikeAddRequest) ClearActor() {
	x.xxx_hidden_Actor = nil
}

func (x *LikeAddRequest) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

type LikeAddRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          []byte
	Subject     *BookGetRequest
	Actor       *MemberGetRequest
	DateCreated *timestamppb.Timestamp
}

func (b0 LikeAddRequest_builder) Build() *LikeAddRequest {
	m0 := &LikeAddRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Subject = b.Subject
	x.xxx_hidden_Actor = b.Actor
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type LikeGetRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Select *LikeSelect            `protobuf:"bytes,1,opt,name=select,proto3" json:"select,omitempty"`
	xxx_hidden_Key    isLikeGetRequest_Key   `protobuf_oneof:"key"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LikeGetRequest) Reset() {
	*x = LikeGetRequest{}
	mi := &file_example_library_like_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeGetRequest) ProtoMessage() {}

func (x *LikeGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_like_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LikeGetRequest) GetSelect() *LikeSelect {
	if x != nil {
		return x.xxx_hidden_Select
	}
	return nil
}

func (x *LikeGetRequest) GetId() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*likeGetRequest_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *LikeGetRequest) GetHolders() *LikeGetByHolders {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*likeGetRequest_Holders); ok {
			return x.Holders
		}
	}
	return nil
}

func (x *LikeGetRequest) SetSelect(v *LikeSelect) {
	x.xxx_hidden_Select = v
}

func (x *LikeGetRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Key = &likeGetRequest_Id{v}
}

func (x *LikeGetRequest) SetHolders(v *LikeGetByHolders) {
	if v == nil {
		x.xxx_hidden_Key = nil
		return
	}
	x.xxx_hidden_Key = &likeGetRequest_Holders{v}
}

func (x *LikeGetRequest) HasSelect() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Select != nil
}

func (x *LikeGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *LikeGetRequest) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*likeGetRequest_Id)
	return ok
}

func (x *LikeGetRequest) HasHolders() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*likeGetRequest_Holders)
	return ok
}

func (x *LikeGetRequest) ClearSelect() {
	x.xxx_hidden_Select = nil
}

func (x *LikeGetRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *LikeGetRequest) ClearId() {
	if _, ok := x.xxx_hidden_Key.(*likeGetRequest_Id); ok {
		x.xxx_hidden_Key = nil
	}
}

func (x *LikeGetRequest) ClearHolders() {
	if _, ok := x.xxx_hidden_Key.(*likeGetRequest_Holders); ok {
		x.xxx_hidden_Key = nil
	}
}

const LikeGetRequest_Key_not_set_case case_LikeGetRequest_Key = 0
const LikeGetRequest_Id_case case_LikeGetRequest_Key = 2
const LikeGetRequest_Holders_case case_LikeGetRequest_Key = 3

func (x *LikeGetRequest) WhichKey() case_LikeGetRequest_Key {
	if x == nil {
		return LikeGetRequest_Key_not_set_case
	}
	switch x.xxx_hidden_Key.(type) {
	case *likeGetRequest_Id:
		return LikeGetRequest_Id_case
	case *likeGetRequest_Holders:
		return LikeGetRequest_Holders_case
	default:
		return LikeGetRequest_Key_not_set_case
	}
}

type LikeGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Select *LikeSelect
	// Fields of oneof xxx_hidden_Key:
	Id      []byte
	Holders *LikeGetByHolders
	// -- end of xxx_hidden_Key
}

func (b0 LikeGetRequest_builder) Build() *LikeGetRequest {
	m0 := &LikeGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Select = b.Select
	if b.Id != nil {
		x.xxx_hidden_Key = &likeGetRequest_Id{b.Id}
	}
	if b.Holders != nil {
		x.xxx_hidden_Key = &likeGetRequest_Holders{b.Holders}
	}
	return m0
}

type case_LikeGetRequest_Key protoreflect.FieldNumber

func (x case_LikeGetRequest_Key) String() string {
	md := file_example_library_like_svc_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isLikeGetRequest_Key interface {
	isLikeGetRequest_Key()
}

type likeGetRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type likeGetRequest_Holders struct {
	Holders *LikeGetByHolders `protobuf:"bytes,3,opt,name=holders,proto3,oneof"`
}

func (*likeGetRequest_Id) isLikeGetRequest_Key() {}

func (*likeGetRequest_Holders) isLikeGetRequest_Key() {}

type LikeSelect struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_All         bool                   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	xxx_hidden_SubjectId   bool                   `protobuf:"varint,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	xxx_hidden_Subject     *BookSelect            `protobuf:"bytes,3,opt,name=subject,proto3,oneof" json:"subject,omitempty"`
	xxx_hidden_Actor       *MemberSelect          `protobuf:"bytes,5,opt,name=actor,proto3,oneof" json:"actor,omitempty"`
	xxx_hidden_DateCreated bool                   `protobuf:"varint,15,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LikeSelect) Reset() {
	*x = LikeSelect{}
	mi := &file_example_library_like_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeSelect) ProtoMessage() {}

func (x *LikeSelect) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_like_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LikeSelect) GetAll() bool {
	if x != nil {
		return x.xxx_hidden_All
	}
	return false
}

func (x *LikeSelect) GetSubjectId() bool {
	if x != nil {
		return x.xxx_hidden_SubjectId
	}
	return false
}

func (x *LikeSelect) GetSubject() *BookSelect {
	if x != nil {
		return x.xxx_hidden_Subject
	}
	return nil
}

func (x *LikeSelect) GetActor() *MemberSelect {
	if x != nil {
		return x.xxx_hidden_Actor
	}
	return nil
}

func (x *LikeSelect) GetDateCreated() bool {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return false
}

func (x *LikeSelect) SetAll(v bool) {
	x.xxx_hidden_All = v
}

func (x *LikeSelect) SetSubjectId(v bool) {
	x.xxx_hidden_SubjectId = v
}

func (x *LikeSelect) SetSubject(v *BookSelect) {
	x.xxx_hidden_Subject = v
}

func (x *LikeSelect) SetActor(v *MemberSelect) {
	x.xxx_hidden_Actor = v
}

func (x *LikeSelect) SetDateCreated(v bool) {
	x.xxx_hidden_DateCreated = v
}

func (x *LikeSelect) HasSubject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subject != nil
}

func (x *LikeSelect) HasActor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Actor != nil
}

func (x *LikeSelect) ClearSubject() {
	x.xxx_hidden_Subject = nil
}

func (x *LikeSelect) ClearActor() {
	x.xxx_hidden_Actor = nil
}

type LikeSelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	All         bool
	SubjectId   bool
	Subject     *BookSelect
	Actor       *MemberSelect
	DateCreated bool
}

func (b0 LikeSelect_builder) Build() *LikeSelect {
	m0 := &LikeSelect{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_All = b.All
	x.xxx_hidden_SubjectId = b.SubjectId
	x.xxx_hidden_Subject = b.Subject
	x.xxx_hidden_Actor = b.Actor
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type LikeGetByHolders struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SubjectId []byte                 `protobuf:"bytes,2,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	xxx_hidden_Actor     *MemberGetRequest      `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *LikeGetByHolders) Reset() {
	*x = LikeGetByHolders{}
	mi := &file_example_library_like_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeGetByHolders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeGetByHolders) ProtoMessage() {}

func (x *LikeGetByHolders) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_like_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LikeGetByHolders) GetSubjectId() []byte {
	if x != nil {
		return x.xxx_hidden_SubjectId
	}
	return nil
}

func (x *LikeGetByHolders) GetActor() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Actor
	}
	return nil
}

func (x *LikeGetByHolders) SetSubjectId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_SubjectId = v
}

func (x *LikeGetByHolders) SetActor(v *MemberGetRequest) {
	x.xxx_hidden_Actor = v
}

func (x *LikeGetByHolders) HasActor() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Actor != nil
}

func (x *LikeGetByHolders) ClearActor() {
	x.xxx_hidden_Actor = nil
}

type LikeGetByHolders_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SubjectId []byte
	Actor     *MemberGetRequest
}

func (b0 LikeGetByHolders_builder) Build() *LikeGetByHolders {
	m0 := &LikeGetByHolders{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SubjectId = b.SubjectId
	x.xxx_hidden_Actor = b.Actor
	return m0
}

type LikePatchRequest struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key *LikeGetRequest        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LikePatchRequest) Reset() {
	*x = LikePatchRequest{}
	mi := &file_example_library_like_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikePatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikePatchRequest) ProtoMessage() {}

func (x *LikePatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_like_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LikePatchRequest) GetKey() *LikeGetRequest {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *LikePatchRequest) SetKey(v *LikeGetRequest) {
	x.xxx_hidden_Key = v
}

func (x *LikePatchRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *LikePatchRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

type LikePatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key *LikeGetRequest
}

func (b0 LikePatchRequest_builder) Build() *LikePatchRequest {
	m0 := &LikePatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	return m0
}

var File_example_library_like_svc_proto protoreflect.FileDescriptor

var file_example_library_like_svc_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x1a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf5, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6b, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x42, 0x79, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xec, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x48, 0x01, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x10, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0x45, 0x0a, 0x10, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x32, 0x91, 0x02, 0x0a, 0x0b, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x45,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x6f,
	0x6d, 0x6e, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x6d, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_example_library_like_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_example_library_like_svc_proto_goTypes = []any{
	(*LikeAddRequest)(nil),        // 0: example.library.LikeAddRequest
	(*LikeGetRequest)(nil),        // 1: example.library.LikeGetRequest
	(*LikeSelect)(nil),            // 2: example.library.LikeSelect
	(*LikeGetByHolders)(nil),      // 3: example.library.LikeGetByHolders
	(*LikePatchRequest)(nil),      // 4: example.library.LikePatchRequest
	(*BookGetRequest)(nil),        // 5: example.library.BookGetRequest
	(*MemberGetRequest)(nil),      // 6: example.library.MemberGetRequest
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*BookSelect)(nil),            // 8: example.library.BookSelect
	(*MemberSelect)(nil),          // 9: example.library.MemberSelect
	(*Like)(nil),                  // 10: example.library.Like
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_example_library_like_svc_proto_depIdxs = []int32{
	5,  // 0: example.library.LikeAddRequest.subject:type_name -> example.library.BookGetRequest
	6,  // 1: example.library.LikeAddRequest.actor:type_name -> example.library.MemberGetRequest
	7,  // 2: example.library.LikeAddRequest.date_created:type_name -> google.protobuf.Timestamp
	2,  // 3: example.library.LikeGetRequest.select:type_name -> example.library.LikeSelect
	3,  // 4: example.library.LikeGetRequest.holders:type_name -> example.library.LikeGetByHolders
	8,  // 5: example.library.LikeSelect.subject:type_name -> example.library.BookSelect
	9,  // 6: example.library.LikeSelect.actor:type_name -> example.library.MemberSelect
	6,  // 7: example.library.LikeGetByHolders.actor:type_name -> example.library.MemberGetRequest
	1,  // 8: example.library.LikePatchRequest.key:type_name -> example.library.LikeGetRequest
	0,  // 9: example.library.LikeService.Add:input_type -> example.library.LikeAddRequest
	1,  // 10: example.library.LikeService.Get:input_type -> example.library.LikeGetRequest
	4,  // 11: example.library.LikeService.Patch:input_type -> example.library.LikePatchRequest
	1,  // 12: example.library.LikeService.Erase:input_type -> example.library.LikeGetRequest
	10, // 13: example.library.LikeService.Add:output_type -> example.library.Like
	10, // 14: example.library.LikeService.Get:output_type -> example.library.Like
	11, // 15: example.library.LikeService.Patch:output_type -> google.protobuf.Empty
	11, // 16: example.library.LikeService.Erase:output_type -> google.protobuf.Empty
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_example_library_like_svc_proto_init() }
func file_example_library_like_svc_proto_init() {
	if File_example_library_like_svc_proto != nil {
		return
	}
	file_example_library_author_svc_proto_init()
	file_example_library_like_proto_init()
	file_example_library_member_svc_proto_init()
	file_example_library_like_svc_proto_msgTypes[0].OneofWrappers = []any{}
	file_example_library_like_svc_proto_msgTypes[1].OneofWrappers = []any{
		(*likeGetRequest_Id)(nil),
		(*likeGetRequest_Holders)(nil),
	}
	file_example_library_like_svc_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_library_like_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_library_like_svc_proto_goTypes,
		DependencyIndexes: file_example_library_like_svc_proto_depIdxs,
		MessageInfos:      file_example_library_like_svc_proto_msgTypes,
	}.Build()
	File_example_library_like_svc_proto = out.File
	file_example_library_like_svc_proto_rawDesc = nil
	file_example_library_like_svc_proto_goTypes = nil
	file_example_library_like_svc_proto_depIdxs = nil
}
