// Code generated by "proto-orm-gen-ent". DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.0
// source: example/library/member.svc.proto

package library

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberAddRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profile     *Profile               `protobuf:"bytes,5,opt,name=profile,proto3"`
	xxx_hidden_Level       Member_Level           `protobuf:"varint,6,opt,name=level,proto3,enum=example.library.Member_Level"`
	xxx_hidden_Parent      *MemberGetRequest      `protobuf:"bytes,8,opt,name=parent,proto3"`
	xxx_hidden_DateCreated *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=date_created,json=dateCreated,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MemberAddRequest) Reset() {
	*x = MemberAddRequest{}
	mi := &file_example_library_member_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAddRequest) ProtoMessage() {}

func (x *MemberAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberAddRequest) GetId() []byte {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *MemberAddRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MemberAddRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *MemberAddRequest) GetProfile() *Profile {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *MemberAddRequest) GetLevel() Member_Level {
	if x != nil {
		return x.xxx_hidden_Level
	}
	return Member_LEVEL_UNSPECIFIED
}

func (x *MemberAddRequest) GetParent() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Parent
	}
	return nil
}

func (x *MemberAddRequest) GetDateCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return nil
}

func (x *MemberAddRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *MemberAddRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *MemberAddRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *MemberAddRequest) SetProfile(v *Profile) {
	x.xxx_hidden_Profile = v
}

func (x *MemberAddRequest) SetLevel(v Member_Level) {
	x.xxx_hidden_Level = v
}

func (x *MemberAddRequest) SetParent(v *MemberGetRequest) {
	x.xxx_hidden_Parent = v
}

func (x *MemberAddRequest) SetDateCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_DateCreated = v
}

func (x *MemberAddRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MemberAddRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MemberAddRequest) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *MemberAddRequest) HasParent() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Parent != nil
}

func (x *MemberAddRequest) HasDateCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DateCreated != nil
}

func (x *MemberAddRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *MemberAddRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *MemberAddRequest) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

func (x *MemberAddRequest) ClearParent() {
	x.xxx_hidden_Parent = nil
}

func (x *MemberAddRequest) ClearDateCreated() {
	x.xxx_hidden_DateCreated = nil
}

type MemberAddRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          []byte
	Name        *string
	Labels      map[string]string
	Profile     *Profile
	Level       Member_Level
	Parent      *MemberGetRequest
	DateCreated *timestamppb.Timestamp
}

func (b0 MemberAddRequest_builder) Build() *MemberAddRequest {
	m0 := &MemberAddRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_Level = b.Level
	x.xxx_hidden_Parent = b.Parent
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type MemberGetRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Select *MemberSelect          `protobuf:"bytes,1,opt,name=select,proto3"`
	xxx_hidden_Key    isMemberGetRequest_Key `protobuf_oneof:"key"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MemberGetRequest) Reset() {
	*x = MemberGetRequest{}
	mi := &file_example_library_member_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberGetRequest) ProtoMessage() {}

func (x *MemberGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberGetRequest) GetSelect() *MemberSelect {
	if x != nil {
		return x.xxx_hidden_Select
	}
	return nil
}

func (x *MemberGetRequest) GetId() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*memberGetRequest_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *MemberGetRequest) GetName() *MemberGetByName {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*memberGetRequest_Name); ok {
			return x.Name
		}
	}
	return nil
}

func (x *MemberGetRequest) SetSelect(v *MemberSelect) {
	x.xxx_hidden_Select = v
}

func (x *MemberGetRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Key = &memberGetRequest_Id{v}
}

func (x *MemberGetRequest) SetName(v *MemberGetByName) {
	if v == nil {
		x.xxx_hidden_Key = nil
		return
	}
	x.xxx_hidden_Key = &memberGetRequest_Name{v}
}

func (x *MemberGetRequest) HasSelect() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Select != nil
}

func (x *MemberGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *MemberGetRequest) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*memberGetRequest_Id)
	return ok
}

func (x *MemberGetRequest) HasName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*memberGetRequest_Name)
	return ok
}

func (x *MemberGetRequest) ClearSelect() {
	x.xxx_hidden_Select = nil
}

func (x *MemberGetRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *MemberGetRequest) ClearId() {
	if _, ok := x.xxx_hidden_Key.(*memberGetRequest_Id); ok {
		x.xxx_hidden_Key = nil
	}
}

func (x *MemberGetRequest) ClearName() {
	if _, ok := x.xxx_hidden_Key.(*memberGetRequest_Name); ok {
		x.xxx_hidden_Key = nil
	}
}

const MemberGetRequest_Key_not_set_case case_MemberGetRequest_Key = 0
const MemberGetRequest_Id_case case_MemberGetRequest_Key = 2
const MemberGetRequest_Name_case case_MemberGetRequest_Key = 9

func (x *MemberGetRequest) WhichKey() case_MemberGetRequest_Key {
	if x == nil {
		return MemberGetRequest_Key_not_set_case
	}
	switch x.xxx_hidden_Key.(type) {
	case *memberGetRequest_Id:
		return MemberGetRequest_Id_case
	case *memberGetRequest_Name:
		return MemberGetRequest_Name_case
	default:
		return MemberGetRequest_Key_not_set_case
	}
}

type MemberGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Select *MemberSelect
	// Fields of oneof xxx_hidden_Key:
	Id   []byte
	Name *MemberGetByName
	// -- end of xxx_hidden_Key
}

func (b0 MemberGetRequest_builder) Build() *MemberGetRequest {
	m0 := &MemberGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Select = b.Select
	if b.Id != nil {
		x.xxx_hidden_Key = &memberGetRequest_Id{b.Id}
	}
	if b.Name != nil {
		x.xxx_hidden_Key = &memberGetRequest_Name{b.Name}
	}
	return m0
}

type case_MemberGetRequest_Key protoreflect.FieldNumber

func (x case_MemberGetRequest_Key) String() string {
	md := file_example_library_member_svc_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMemberGetRequest_Key interface {
	isMemberGetRequest_Key()
}

type memberGetRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type memberGetRequest_Name struct {
	Name *MemberGetByName `protobuf:"bytes,9,opt,name=name,proto3,oneof"`
}

func (*memberGetRequest_Id) isMemberGetRequest_Key() {}

func (*memberGetRequest_Name) isMemberGetRequest_Key() {}

type MemberSelect struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_All         bool                   `protobuf:"varint,1,opt,name=all,proto3"`
	xxx_hidden_Name        bool                   `protobuf:"varint,3,opt,name=name,proto3"`
	xxx_hidden_Labels      bool                   `protobuf:"varint,4,opt,name=labels,proto3"`
	xxx_hidden_Profile     bool                   `protobuf:"varint,5,opt,name=profile,proto3"`
	xxx_hidden_Level       bool                   `protobuf:"varint,6,opt,name=level,proto3"`
	xxx_hidden_Parent      *MemberSelect          `protobuf:"bytes,8,opt,name=parent,proto3,oneof"`
	xxx_hidden_Children    *MemberSelect          `protobuf:"bytes,9,opt,name=children,proto3,oneof"`
	xxx_hidden_DateCreated bool                   `protobuf:"varint,15,opt,name=date_created,json=dateCreated,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MemberSelect) Reset() {
	*x = MemberSelect{}
	mi := &file_example_library_member_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberSelect) ProtoMessage() {}

func (x *MemberSelect) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberSelect) GetAll() bool {
	if x != nil {
		return x.xxx_hidden_All
	}
	return false
}

func (x *MemberSelect) GetName() bool {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return false
}

func (x *MemberSelect) GetLabels() bool {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return false
}

func (x *MemberSelect) GetProfile() bool {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return false
}

func (x *MemberSelect) GetLevel() bool {
	if x != nil {
		return x.xxx_hidden_Level
	}
	return false
}

func (x *MemberSelect) GetParent() *MemberSelect {
	if x != nil {
		return x.xxx_hidden_Parent
	}
	return nil
}

func (x *MemberSelect) GetChildren() *MemberSelect {
	if x != nil {
		return x.xxx_hidden_Children
	}
	return nil
}

func (x *MemberSelect) GetDateCreated() bool {
	if x != nil {
		return x.xxx_hidden_DateCreated
	}
	return false
}

func (x *MemberSelect) SetAll(v bool) {
	x.xxx_hidden_All = v
}

func (x *MemberSelect) SetName(v bool) {
	x.xxx_hidden_Name = v
}

func (x *MemberSelect) SetLabels(v bool) {
	x.xxx_hidden_Labels = v
}

func (x *MemberSelect) SetProfile(v bool) {
	x.xxx_hidden_Profile = v
}

func (x *MemberSelect) SetLevel(v bool) {
	x.xxx_hidden_Level = v
}

func (x *MemberSelect) SetParent(v *MemberSelect) {
	x.xxx_hidden_Parent = v
}

func (x *MemberSelect) SetChildren(v *MemberSelect) {
	x.xxx_hidden_Children = v
}

func (x *MemberSelect) SetDateCreated(v bool) {
	x.xxx_hidden_DateCreated = v
}

func (x *MemberSelect) HasParent() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Parent != nil
}

func (x *MemberSelect) HasChildren() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Children != nil
}

func (x *MemberSelect) ClearParent() {
	x.xxx_hidden_Parent = nil
}

func (x *MemberSelect) ClearChildren() {
	x.xxx_hidden_Children = nil
}

type MemberSelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	All         bool
	Name        bool
	Labels      bool
	Profile     bool
	Level       bool
	Parent      *MemberSelect
	Children    *MemberSelect
	DateCreated bool
}

func (b0 MemberSelect_builder) Build() *MemberSelect {
	m0 := &MemberSelect{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_All = b.All
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_Level = b.Level
	x.xxx_hidden_Parent = b.Parent
	x.xxx_hidden_Children = b.Children
	x.xxx_hidden_DateCreated = b.DateCreated
	return m0
}

type MemberGetByName struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Parent *MemberGetRequest      `protobuf:"bytes,8,opt,name=parent,proto3"`
	xxx_hidden_Name   string                 `protobuf:"bytes,3,opt,name=name,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MemberGetByName) Reset() {
	*x = MemberGetByName{}
	mi := &file_example_library_member_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberGetByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberGetByName) ProtoMessage() {}

func (x *MemberGetByName) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberGetByName) GetParent() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Parent
	}
	return nil
}

func (x *MemberGetByName) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *MemberGetByName) SetParent(v *MemberGetRequest) {
	x.xxx_hidden_Parent = v
}

func (x *MemberGetByName) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *MemberGetByName) HasParent() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Parent != nil
}

func (x *MemberGetByName) ClearParent() {
	x.xxx_hidden_Parent = nil
}

type MemberGetByName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Parent *MemberGetRequest
	Name   string
}

func (b0 MemberGetByName_builder) Build() *MemberGetByName {
	m0 := &MemberGetByName{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Parent = b.Parent
	x.xxx_hidden_Name = b.Name
	return m0
}

type MemberPatchRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *MemberGetRequest      `protobuf:"bytes,1,opt,name=key,proto3"`
	xxx_hidden_Name        *string                `protobuf:"bytes,5,opt,name=name,proto3,oneof"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profile     *Profile               `protobuf:"bytes,9,opt,name=profile,proto3,oneof"`
	xxx_hidden_Level       Member_Level           `protobuf:"varint,11,opt,name=level,proto3,enum=example.library.Member_Level,oneof"`
	xxx_hidden_Parent      *MemberGetRequest      `protobuf:"bytes,15,opt,name=parent,proto3"`
	xxx_hidden_ParentNull  bool                   `protobuf:"varint,16,opt,name=parent_null,json=parentNull,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MemberPatchRequest) Reset() {
	*x = MemberPatchRequest{}
	mi := &file_example_library_member_svc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPatchRequest) ProtoMessage() {}

func (x *MemberPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_member_svc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemberPatchRequest) GetKey() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *MemberPatchRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *MemberPatchRequest) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *MemberPatchRequest) GetProfile() *Profile {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *MemberPatchRequest) GetLevel() Member_Level {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Level
		}
	}
	return Member_LEVEL_UNSPECIFIED
}

func (x *MemberPatchRequest) GetParent() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Parent
	}
	return nil
}

func (x *MemberPatchRequest) GetParentNull() bool {
	if x != nil {
		return x.xxx_hidden_ParentNull
	}
	return false
}

func (x *MemberPatchRequest) SetKey(v *MemberGetRequest) {
	x.xxx_hidden_Key = v
}

func (x *MemberPatchRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *MemberPatchRequest) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *MemberPatchRequest) SetProfile(v *Profile) {
	x.xxx_hidden_Profile = v
}

func (x *MemberPatchRequest) SetLevel(v Member_Level) {
	x.xxx_hidden_Level = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *MemberPatchRequest) SetParent(v *MemberGetRequest) {
	x.xxx_hidden_Parent = v
}

func (x *MemberPatchRequest) SetParentNull(v bool) {
	x.xxx_hidden_ParentNull = v
}

func (x *MemberPatchRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *MemberPatchRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MemberPatchRequest) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *MemberPatchRequest) HasLevel() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *MemberPatchRequest) HasParent() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Parent != nil
}

func (x *MemberPatchRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *MemberPatchRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *MemberPatchRequest) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

func (x *MemberPatchRequest) ClearLevel() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Level = Member_LEVEL_UNSPECIFIED
}

func (x *MemberPatchRequest) ClearParent() {
	x.xxx_hidden_Parent = nil
}

type MemberPatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key        *MemberGetRequest
	Name       *string
	Labels     map[string]string
	Profile    *Profile
	Level      *Member_Level
	Parent     *MemberGetRequest
	ParentNull bool
}

func (b0 MemberPatchRequest_builder) Build() *MemberPatchRequest {
	m0 := &MemberPatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Profile = b.Profile
	if b.Level != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Level = *b.Level
	}
	x.xxx_hidden_Parent = b.Parent
	x.xxx_hidden_ParentNull = b.ParentNull
	return m0
}

var File_example_library_member_svc_proto protoreflect.FileDescriptor

var file_example_library_member_svc_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x1a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb,
	0x03, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x9a, 0x01, 0x0a,
	0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x01, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22,
	0x60, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xd4, 0x03, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x37, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x9f, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x41, 0x64,
	0x64, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x41, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x44, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12,
	0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x6f, 0x6d, 0x6e, 0x75,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_example_library_member_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_example_library_member_svc_proto_goTypes = []any{
	(*MemberAddRequest)(nil),      // 0: example.library.MemberAddRequest
	(*MemberGetRequest)(nil),      // 1: example.library.MemberGetRequest
	(*MemberSelect)(nil),          // 2: example.library.MemberSelect
	(*MemberGetByName)(nil),       // 3: example.library.MemberGetByName
	(*MemberPatchRequest)(nil),    // 4: example.library.MemberPatchRequest
	nil,                           // 5: example.library.MemberAddRequest.LabelsEntry
	nil,                           // 6: example.library.MemberPatchRequest.LabelsEntry
	(*Profile)(nil),               // 7: example.library.Profile
	(Member_Level)(0),             // 8: example.library.Member.Level
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*Member)(nil),                // 10: example.library.Member
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_example_library_member_svc_proto_depIdxs = []int32{
	5,  // 0: example.library.MemberAddRequest.labels:type_name -> example.library.MemberAddRequest.LabelsEntry
	7,  // 1: example.library.MemberAddRequest.profile:type_name -> example.library.Profile
	8,  // 2: example.library.MemberAddRequest.level:type_name -> example.library.Member.Level
	1,  // 3: example.library.MemberAddRequest.parent:type_name -> example.library.MemberGetRequest
	9,  // 4: example.library.MemberAddRequest.date_created:type_name -> google.protobuf.Timestamp
	2,  // 5: example.library.MemberGetRequest.select:type_name -> example.library.MemberSelect
	3,  // 6: example.library.MemberGetRequest.name:type_name -> example.library.MemberGetByName
	2,  // 7: example.library.MemberSelect.parent:type_name -> example.library.MemberSelect
	2,  // 8: example.library.MemberSelect.children:type_name -> example.library.MemberSelect
	1,  // 9: example.library.MemberGetByName.parent:type_name -> example.library.MemberGetRequest
	1,  // 10: example.library.MemberPatchRequest.key:type_name -> example.library.MemberGetRequest
	6,  // 11: example.library.MemberPatchRequest.labels:type_name -> example.library.MemberPatchRequest.LabelsEntry
	7,  // 12: example.library.MemberPatchRequest.profile:type_name -> example.library.Profile
	8,  // 13: example.library.MemberPatchRequest.level:type_name -> example.library.Member.Level
	1,  // 14: example.library.MemberPatchRequest.parent:type_name -> example.library.MemberGetRequest
	0,  // 15: example.library.MemberService.Add:input_type -> example.library.MemberAddRequest
	1,  // 16: example.library.MemberService.Get:input_type -> example.library.MemberGetRequest
	4,  // 17: example.library.MemberService.Patch:input_type -> example.library.MemberPatchRequest
	1,  // 18: example.library.MemberService.Erase:input_type -> example.library.MemberGetRequest
	10, // 19: example.library.MemberService.Add:output_type -> example.library.Member
	10, // 20: example.library.MemberService.Get:output_type -> example.library.Member
	11, // 21: example.library.MemberService.Patch:output_type -> google.protobuf.Empty
	11, // 22: example.library.MemberService.Erase:output_type -> google.protobuf.Empty
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_example_library_member_svc_proto_init() }
func file_example_library_member_svc_proto_init() {
	if File_example_library_member_svc_proto != nil {
		return
	}
	file_example_library_member_proto_init()
	file_example_library_profile_proto_init()
	file_example_library_member_svc_proto_msgTypes[0].OneofWrappers = []any{}
	file_example_library_member_svc_proto_msgTypes[1].OneofWrappers = []any{
		(*memberGetRequest_Id)(nil),
		(*memberGetRequest_Name)(nil),
	}
	file_example_library_member_svc_proto_msgTypes[2].OneofWrappers = []any{}
	file_example_library_member_svc_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_example_library_member_svc_proto_rawDesc), len(file_example_library_member_svc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_library_member_svc_proto_goTypes,
		DependencyIndexes: file_example_library_member_svc_proto_depIdxs,
		MessageInfos:      file_example_library_member_svc_proto_msgTypes,
	}.Build()
	File_example_library_member_svc_proto = out.File
	file_example_library_member_svc_proto_goTypes = nil
	file_example_library_member_svc_proto_depIdxs = nil
}
