// Code generated by "proto-orm-gen-ent". DO NOT EDIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.0
// source: example/library/locker.svc.proto

package library

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockerAddRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []byte                 `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
	xxx_hidden_Owner       *MemberGetRequest      `protobuf:"bytes,2,opt,name=owner,proto3"`
	xxx_hidden_Name        string                 `protobuf:"bytes,3,opt,name=name,proto3"`
	xxx_hidden_Number      uint32                 `protobuf:"varint,4,opt,name=number,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LockerAddRequest) Reset() {
	*x = LockerAddRequest{}
	mi := &file_example_library_locker_svc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerAddRequest) ProtoMessage() {}

func (x *LockerAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_locker_svc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LockerAddRequest) GetId() []byte {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *LockerAddRequest) GetOwner() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Owner
	}
	return nil
}

func (x *LockerAddRequest) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *LockerAddRequest) GetNumber() uint32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *LockerAddRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *LockerAddRequest) SetOwner(v *MemberGetRequest) {
	x.xxx_hidden_Owner = v
}

func (x *LockerAddRequest) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *LockerAddRequest) SetNumber(v uint32) {
	x.xxx_hidden_Number = v
}

func (x *LockerAddRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *LockerAddRequest) HasOwner() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Owner != nil
}

func (x *LockerAddRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *LockerAddRequest) ClearOwner() {
	x.xxx_hidden_Owner = nil
}

type LockerAddRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     []byte
	Owner  *MemberGetRequest
	Name   string
	Number uint32
}

func (b0 LockerAddRequest_builder) Build() *LockerAddRequest {
	m0 := &LockerAddRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Owner = b.Owner
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Number = b.Number
	return m0
}

type LockerGetRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Select *LockerSelect          `protobuf:"bytes,1,opt,name=select,proto3"`
	xxx_hidden_Key    isLockerGetRequest_Key `protobuf_oneof:"key"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LockerGetRequest) Reset() {
	*x = LockerGetRequest{}
	mi := &file_example_library_locker_svc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerGetRequest) ProtoMessage() {}

func (x *LockerGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_locker_svc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LockerGetRequest) GetSelect() *LockerSelect {
	if x != nil {
		return x.xxx_hidden_Select
	}
	return nil
}

func (x *LockerGetRequest) GetId() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Key.(*lockerGetRequest_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *LockerGetRequest) SetSelect(v *LockerSelect) {
	x.xxx_hidden_Select = v
}

func (x *LockerGetRequest) SetId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Key = &lockerGetRequest_Id{v}
}

func (x *LockerGetRequest) HasSelect() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Select != nil
}

func (x *LockerGetRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *LockerGetRequest) HasId() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Key.(*lockerGetRequest_Id)
	return ok
}

func (x *LockerGetRequest) ClearSelect() {
	x.xxx_hidden_Select = nil
}

func (x *LockerGetRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *LockerGetRequest) ClearId() {
	if _, ok := x.xxx_hidden_Key.(*lockerGetRequest_Id); ok {
		x.xxx_hidden_Key = nil
	}
}

const LockerGetRequest_Key_not_set_case case_LockerGetRequest_Key = 0
const LockerGetRequest_Id_case case_LockerGetRequest_Key = 2

func (x *LockerGetRequest) WhichKey() case_LockerGetRequest_Key {
	if x == nil {
		return LockerGetRequest_Key_not_set_case
	}
	switch x.xxx_hidden_Key.(type) {
	case *lockerGetRequest_Id:
		return LockerGetRequest_Id_case
	default:
		return LockerGetRequest_Key_not_set_case
	}
}

type LockerGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Select *LockerSelect
	// Fields of oneof xxx_hidden_Key:
	Id []byte
	// -- end of xxx_hidden_Key
}

func (b0 LockerGetRequest_builder) Build() *LockerGetRequest {
	m0 := &LockerGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Select = b.Select
	if b.Id != nil {
		x.xxx_hidden_Key = &lockerGetRequest_Id{b.Id}
	}
	return m0
}

type case_LockerGetRequest_Key protoreflect.FieldNumber

func (x case_LockerGetRequest_Key) String() string {
	md := file_example_library_locker_svc_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isLockerGetRequest_Key interface {
	isLockerGetRequest_Key()
}

type lockerGetRequest_Id struct {
	Id []byte `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*lockerGetRequest_Id) isLockerGetRequest_Key() {}

type LockerSelect struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_All    bool                   `protobuf:"varint,1,opt,name=all,proto3"`
	xxx_hidden_Owner  *MemberSelect          `protobuf:"bytes,2,opt,name=owner,proto3,oneof"`
	xxx_hidden_Name   bool                   `protobuf:"varint,3,opt,name=name,proto3"`
	xxx_hidden_Number bool                   `protobuf:"varint,4,opt,name=number,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LockerSelect) Reset() {
	*x = LockerSelect{}
	mi := &file_example_library_locker_svc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerSelect) ProtoMessage() {}

func (x *LockerSelect) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_locker_svc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LockerSelect) GetAll() bool {
	if x != nil {
		return x.xxx_hidden_All
	}
	return false
}

func (x *LockerSelect) GetOwner() *MemberSelect {
	if x != nil {
		return x.xxx_hidden_Owner
	}
	return nil
}

func (x *LockerSelect) GetName() bool {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return false
}

func (x *LockerSelect) GetNumber() bool {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return false
}

func (x *LockerSelect) SetAll(v bool) {
	x.xxx_hidden_All = v
}

func (x *LockerSelect) SetOwner(v *MemberSelect) {
	x.xxx_hidden_Owner = v
}

func (x *LockerSelect) SetName(v bool) {
	x.xxx_hidden_Name = v
}

func (x *LockerSelect) SetNumber(v bool) {
	x.xxx_hidden_Number = v
}

func (x *LockerSelect) HasOwner() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Owner != nil
}

func (x *LockerSelect) ClearOwner() {
	x.xxx_hidden_Owner = nil
}

type LockerSelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	All    bool
	Owner  *MemberSelect
	Name   bool
	Number bool
}

func (b0 LockerSelect_builder) Build() *LockerSelect {
	m0 := &LockerSelect{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_All = b.All
	x.xxx_hidden_Owner = b.Owner
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Number = b.Number
	return m0
}

type LockerPatchRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key         *LockerGetRequest      `protobuf:"bytes,1,opt,name=key,proto3"`
	xxx_hidden_Owner       *MemberGetRequest      `protobuf:"bytes,3,opt,name=owner,proto3"`
	xxx_hidden_OwnerNull   bool                   `protobuf:"varint,4,opt,name=owner_null,json=ownerNull,proto3"`
	xxx_hidden_Name        *string                `protobuf:"bytes,5,opt,name=name,proto3,oneof"`
	xxx_hidden_Number      uint32                 `protobuf:"varint,7,opt,name=number,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LockerPatchRequest) Reset() {
	*x = LockerPatchRequest{}
	mi := &file_example_library_locker_svc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockerPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockerPatchRequest) ProtoMessage() {}

func (x *LockerPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_library_locker_svc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LockerPatchRequest) GetKey() *LockerGetRequest {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return nil
}

func (x *LockerPatchRequest) GetOwner() *MemberGetRequest {
	if x != nil {
		return x.xxx_hidden_Owner
	}
	return nil
}

func (x *LockerPatchRequest) GetOwnerNull() bool {
	if x != nil {
		return x.xxx_hidden_OwnerNull
	}
	return false
}

func (x *LockerPatchRequest) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *LockerPatchRequest) GetNumber() uint32 {
	if x != nil {
		return x.xxx_hidden_Number
	}
	return 0
}

func (x *LockerPatchRequest) SetKey(v *LockerGetRequest) {
	x.xxx_hidden_Key = v
}

func (x *LockerPatchRequest) SetOwner(v *MemberGetRequest) {
	x.xxx_hidden_Owner = v
}

func (x *LockerPatchRequest) SetOwnerNull(v bool) {
	x.xxx_hidden_OwnerNull = v
}

func (x *LockerPatchRequest) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *LockerPatchRequest) SetNumber(v uint32) {
	x.xxx_hidden_Number = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *LockerPatchRequest) HasKey() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Key != nil
}

func (x *LockerPatchRequest) HasOwner() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Owner != nil
}

func (x *LockerPatchRequest) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *LockerPatchRequest) HasNumber() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *LockerPatchRequest) ClearKey() {
	x.xxx_hidden_Key = nil
}

func (x *LockerPatchRequest) ClearOwner() {
	x.xxx_hidden_Owner = nil
}

func (x *LockerPatchRequest) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Name = nil
}

func (x *LockerPatchRequest) ClearNumber() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Number = 0
}

type LockerPatchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key       *LockerGetRequest
	Owner     *MemberGetRequest
	OwnerNull bool
	Name      *string
	Number    *uint32
}

func (b0 LockerPatchRequest_builder) Build() *LockerPatchRequest {
	m0 := &LockerPatchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Owner = b.Owner
	x.xxx_hidden_OwnerNull = b.OwnerNull
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Number != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Number = *b.Number
	}
	return m0
}

var File_example_library_locker_svc_proto protoreflect.FileDescriptor

var file_example_library_locker_svc_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x1a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x93, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x90, 0x01, 0x0a, 0x0c, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x38, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xeb, 0x01,
	0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x75, 0x6c,
	0x6c, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x9f, 0x02, 0x0a, 0x0d,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x45, 0x72, 0x61,
	0x73, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x6f,
	0x6d, 0x6e, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x6d, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_example_library_locker_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_example_library_locker_svc_proto_goTypes = []any{
	(*LockerAddRequest)(nil),   // 0: example.library.LockerAddRequest
	(*LockerGetRequest)(nil),   // 1: example.library.LockerGetRequest
	(*LockerSelect)(nil),       // 2: example.library.LockerSelect
	(*LockerPatchRequest)(nil), // 3: example.library.LockerPatchRequest
	(*MemberGetRequest)(nil),   // 4: example.library.MemberGetRequest
	(*MemberSelect)(nil),       // 5: example.library.MemberSelect
	(*Locker)(nil),             // 6: example.library.Locker
	(*emptypb.Empty)(nil),      // 7: google.protobuf.Empty
}
var file_example_library_locker_svc_proto_depIdxs = []int32{
	4, // 0: example.library.LockerAddRequest.owner:type_name -> example.library.MemberGetRequest
	2, // 1: example.library.LockerGetRequest.select:type_name -> example.library.LockerSelect
	5, // 2: example.library.LockerSelect.owner:type_name -> example.library.MemberSelect
	1, // 3: example.library.LockerPatchRequest.key:type_name -> example.library.LockerGetRequest
	4, // 4: example.library.LockerPatchRequest.owner:type_name -> example.library.MemberGetRequest
	0, // 5: example.library.LockerService.Add:input_type -> example.library.LockerAddRequest
	1, // 6: example.library.LockerService.Get:input_type -> example.library.LockerGetRequest
	3, // 7: example.library.LockerService.Patch:input_type -> example.library.LockerPatchRequest
	1, // 8: example.library.LockerService.Erase:input_type -> example.library.LockerGetRequest
	6, // 9: example.library.LockerService.Add:output_type -> example.library.Locker
	6, // 10: example.library.LockerService.Get:output_type -> example.library.Locker
	7, // 11: example.library.LockerService.Patch:output_type -> google.protobuf.Empty
	7, // 12: example.library.LockerService.Erase:output_type -> google.protobuf.Empty
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_example_library_locker_svc_proto_init() }
func file_example_library_locker_svc_proto_init() {
	if File_example_library_locker_svc_proto != nil {
		return
	}
	file_example_library_locker_proto_init()
	file_example_library_member_svc_proto_init()
	file_example_library_locker_svc_proto_msgTypes[0].OneofWrappers = []any{}
	file_example_library_locker_svc_proto_msgTypes[1].OneofWrappers = []any{
		(*lockerGetRequest_Id)(nil),
	}
	file_example_library_locker_svc_proto_msgTypes[2].OneofWrappers = []any{}
	file_example_library_locker_svc_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_example_library_locker_svc_proto_rawDesc), len(file_example_library_locker_svc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_library_locker_svc_proto_goTypes,
		DependencyIndexes: file_example_library_locker_svc_proto_depIdxs,
		MessageInfos:      file_example_library_locker_svc_proto_msgTypes,
	}.Build()
	File_example_library_locker_svc_proto = out.File
	file_example_library_locker_svc_proto_goTypes = nil
	file_example_library_locker_svc_proto_depIdxs = nil
}
