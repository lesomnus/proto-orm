// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: orm.proto

package orm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED Type = 0
	Type_TYPE_BOOL        Type = 8
	Type_TYPE_ENUM        Type = 14
	Type_TYPE_INT32       Type = 5
	Type_TYPE_SINT32      Type = 17
	Type_TYPE_UINT32      Type = 13
	Type_TYPE_INT64       Type = 3
	Type_TYPE_SINT64      Type = 18
	Type_TYPE_UINT64      Type = 4
	Type_TYPE_SFIXED32    Type = 15
	Type_TYPE_FIXED32     Type = 7
	Type_TYPE_FLOAT       Type = 2
	Type_TYPE_SFIXED64    Type = 16
	Type_TYPE_FIXED64     Type = 6
	Type_TYPE_DOUBLE      Type = 1
	Type_TYPE_STRING      Type = 9
	Type_TYPE_BYTES       Type = 12
	Type_TYPE_MESSAGE     Type = 11
	Type_TYPE_GROUP       Type = 10
	Type_TYPE_INT         Type = 3 // int decay.
	Type_TYPE_UINT        Type = 4 // unsigned int decay.
	Type_TYPE_UUID        Type = 64
	Type_TYPE_TIME        Type = 65
	Type_TYPE_JSON        Type = 66
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		8:  "TYPE_BOOL",
		14: "TYPE_ENUM",
		5:  "TYPE_INT32",
		17: "TYPE_SINT32",
		13: "TYPE_UINT32",
		3:  "TYPE_INT64",
		18: "TYPE_SINT64",
		4:  "TYPE_UINT64",
		15: "TYPE_SFIXED32",
		7:  "TYPE_FIXED32",
		2:  "TYPE_FLOAT",
		16: "TYPE_SFIXED64",
		6:  "TYPE_FIXED64",
		1:  "TYPE_DOUBLE",
		9:  "TYPE_STRING",
		12: "TYPE_BYTES",
		11: "TYPE_MESSAGE",
		10: "TYPE_GROUP",
		// Duplicate value: 3: "TYPE_INT",
		// Duplicate value: 4: "TYPE_UINT",
		64: "TYPE_UUID",
		65: "TYPE_TIME",
		66: "TYPE_JSON",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_BOOL":        8,
		"TYPE_ENUM":        14,
		"TYPE_INT32":       5,
		"TYPE_SINT32":      17,
		"TYPE_UINT32":      13,
		"TYPE_INT64":       3,
		"TYPE_SINT64":      18,
		"TYPE_UINT64":      4,
		"TYPE_SFIXED32":    15,
		"TYPE_FIXED32":     7,
		"TYPE_FLOAT":       2,
		"TYPE_SFIXED64":    16,
		"TYPE_FIXED64":     6,
		"TYPE_DOUBLE":      1,
		"TYPE_STRING":      9,
		"TYPE_BYTES":       12,
		"TYPE_MESSAGE":     11,
		"TYPE_GROUP":       10,
		"TYPE_INT":         3,
		"TYPE_UINT":        4,
		"TYPE_UUID":        64,
		"TYPE_TIME":        65,
		"TYPE_JSON":        66,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_orm_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_orm_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{0}
}

type FileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages *FileMessageOptions `protobuf:"bytes,1,opt,name=messages,proto3" json:"messages,omitempty"`
	Rpcs     *FileRpcOptions     `protobuf:"bytes,2,opt,name=rpcs,proto3" json:"rpcs,omitempty"`
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	mi := &file_orm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{0}
}

func (x *FileOptions) GetMessages() *FileMessageOptions {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *FileOptions) GetRpcs() *FileRpcOptions {
	if x != nil {
		return x.Rpcs
	}
	return nil
}

type FileMessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *FileMessageOptions) Reset() {
	*x = FileMessageOptions{}
	mi := &file_orm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMessageOptions) ProtoMessage() {}

func (x *FileMessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMessageOptions.ProtoReflect.Descriptor instead.
func (*FileMessageOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{1}
}

func (x *FileMessageOptions) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type MessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool    `protobuf:"varint,1,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Indexes []*Index `protobuf:"bytes,2,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *MessageOptions) Reset() {
	*x = MessageOptions{}
	mi := &file_orm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOptions) ProtoMessage() {}

func (x *MessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOptions.ProtoReflect.Descriptor instead.
func (*MessageOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{2}
}

func (x *MessageOptions) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *MessageOptions) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

type FieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ignored   bool    `protobuf:"varint,1,opt,name=ignored,proto3" json:"ignored,omitempty"`
	Type      Type    `protobuf:"varint,2,opt,name=type,proto3,enum=orm.Type" json:"type,omitempty"`
	Key       bool    `protobuf:"varint,5,opt,name=key,proto3" json:"key,omitempty"`
	Unique    bool    `protobuf:"varint,6,opt,name=unique,proto3" json:"unique,omitempty"`
	Nullable  bool    `protobuf:"varint,7,opt,name=nullable,proto3" json:"nullable,omitempty"`
	Immutable bool    `protobuf:"varint,8,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Default   *string `protobuf:"bytes,9,opt,name=default,proto3,oneof" json:"default,omitempty"`
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	mi := &file_orm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{3}
}

func (x *FieldOptions) GetIgnored() bool {
	if x != nil {
		return x.Ignored
	}
	return false
}

func (x *FieldOptions) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *FieldOptions) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

func (x *FieldOptions) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *FieldOptions) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *FieldOptions) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *FieldOptions) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

type EdgeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ignored   bool           `protobuf:"varint,1,opt,name=ignored,proto3" json:"ignored,omitempty"`
	From      int32          `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Bind      int32          `protobuf:"varint,3,opt,name=bind,proto3" json:"bind,omitempty"`
	Select    *SelectOptions `protobuf:"bytes,4,opt,name=select,proto3" json:"select,omitempty"`
	Nullable  bool           `protobuf:"varint,7,opt,name=nullable,proto3" json:"nullable,omitempty"`
	Immutable bool           `protobuf:"varint,8,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *EdgeOptions) Reset() {
	*x = EdgeOptions{}
	mi := &file_orm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EdgeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeOptions) ProtoMessage() {}

func (x *EdgeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeOptions.ProtoReflect.Descriptor instead.
func (*EdgeOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{4}
}

func (x *EdgeOptions) GetIgnored() bool {
	if x != nil {
		return x.Ignored
	}
	return false
}

func (x *EdgeOptions) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *EdgeOptions) GetBind() int32 {
	if x != nil {
		return x.Bind
	}
	return 0
}

func (x *EdgeOptions) GetSelect() *SelectOptions {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *EdgeOptions) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *EdgeOptions) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

type SelectOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Select all fields if empty.
	Refs []int32 `protobuf:"varint,2,rep,packed,name=refs,proto3" json:"refs,omitempty"`
}

func (x *SelectOptions) Reset() {
	*x = SelectOptions{}
	mi := &file_orm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectOptions) ProtoMessage() {}

func (x *SelectOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectOptions.ProtoReflect.Descriptor instead.
func (*SelectOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{5}
}

func (x *SelectOptions) GetRefs() []int32 {
	if x != nil {
		return x.Refs
	}
	return nil
}

type FileRpcOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool      `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Add      *RpcAdd   `protobuf:"bytes,2,opt,name=add,proto3,oneof" json:"add,omitempty"`
	Get      *RpcGet   `protobuf:"bytes,3,opt,name=get,proto3,oneof" json:"get,omitempty"`
	List     *RpcList  `protobuf:"bytes,4,opt,name=list,proto3,oneof" json:"list,omitempty"`
	Patch    *RpcPatch `protobuf:"bytes,5,opt,name=patch,proto3,oneof" json:"patch,omitempty"`
	Erase    *RpcErase `protobuf:"bytes,6,opt,name=erase,proto3,oneof" json:"erase,omitempty"`
}

func (x *FileRpcOptions) Reset() {
	*x = FileRpcOptions{}
	mi := &file_orm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRpcOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRpcOptions) ProtoMessage() {}

func (x *FileRpcOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRpcOptions.ProtoReflect.Descriptor instead.
func (*FileRpcOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{6}
}

func (x *FileRpcOptions) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *FileRpcOptions) GetAdd() *RpcAdd {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *FileRpcOptions) GetGet() *RpcGet {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *FileRpcOptions) GetList() *RpcList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FileRpcOptions) GetPatch() *RpcPatch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *FileRpcOptions) GetErase() *RpcErase {
	if x != nil {
		return x.Erase
	}
	return nil
}

type RpcOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled *bool     `protobuf:"varint,1,opt,name=disabled,proto3,oneof" json:"disabled,omitempty"`
	Add      *RpcAdd   `protobuf:"bytes,2,opt,name=add,proto3,oneof" json:"add,omitempty"`
	Get      *RpcGet   `protobuf:"bytes,3,opt,name=get,proto3,oneof" json:"get,omitempty"`
	List     *RpcList  `protobuf:"bytes,4,opt,name=list,proto3,oneof" json:"list,omitempty"`
	Patch    *RpcPatch `protobuf:"bytes,5,opt,name=patch,proto3,oneof" json:"patch,omitempty"`
	Erase    *RpcErase `protobuf:"bytes,6,opt,name=erase,proto3,oneof" json:"erase,omitempty"`
}

func (x *RpcOptions) Reset() {
	*x = RpcOptions{}
	mi := &file_orm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcOptions) ProtoMessage() {}

func (x *RpcOptions) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcOptions.ProtoReflect.Descriptor instead.
func (*RpcOptions) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{7}
}

func (x *RpcOptions) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *RpcOptions) GetAdd() *RpcAdd {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *RpcOptions) GetGet() *RpcGet {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *RpcOptions) GetList() *RpcList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RpcOptions) GetPatch() *RpcPatch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *RpcOptions) GetErase() *RpcErase {
	if x != nil {
		return x.Erase
	}
	return nil
}

type RpcAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *RpcAdd) Reset() {
	*x = RpcAdd{}
	mi := &file_orm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAdd) ProtoMessage() {}

func (x *RpcAdd) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAdd.ProtoReflect.Descriptor instead.
func (*RpcAdd) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{8}
}

func (x *RpcAdd) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type RpcGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *RpcGet) Reset() {
	*x = RpcGet{}
	mi := &file_orm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGet) ProtoMessage() {}

func (x *RpcGet) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGet.ProtoReflect.Descriptor instead.
func (*RpcGet) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{9}
}

func (x *RpcGet) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type RpcList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *RpcList) Reset() {
	*x = RpcList{}
	mi := &file_orm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcList) ProtoMessage() {}

func (x *RpcList) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcList.ProtoReflect.Descriptor instead.
func (*RpcList) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{10}
}

func (x *RpcList) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type RpcPatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *RpcPatch) Reset() {
	*x = RpcPatch{}
	mi := &file_orm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPatch) ProtoMessage() {}

func (x *RpcPatch) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPatch.ProtoReflect.Descriptor instead.
func (*RpcPatch) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{11}
}

func (x *RpcPatch) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type RpcErase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *RpcErase) Reset() {
	*x = RpcErase{}
	mi := &file_orm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcErase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcErase) ProtoMessage() {}

func (x *RpcErase) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcErase.ProtoReflect.Descriptor instead.
func (*RpcErase) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{12}
}

func (x *RpcErase) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled  bool     `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Refs      []uint32 `protobuf:"varint,3,rep,packed,name=refs,proto3" json:"refs,omitempty"`
	Unique    bool     `protobuf:"varint,6,opt,name=unique,proto3" json:"unique,omitempty"`
	Immutable bool     `protobuf:"varint,8,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	mi := &file_orm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_orm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_orm_proto_rawDescGZIP(), []int{13}
}

func (x *Index) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Index) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Index) GetRefs() []uint32 {
	if x != nil {
		return x.Refs
	}
	return nil
}

func (x *Index) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Index) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

var file_orm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         45000,
		Name:          "orm.all",
		Tag:           "bytes,45000,opt,name=all",
		Filename:      "orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOptions)(nil),
		Field:         45001,
		Name:          "orm.message",
		Tag:           "bytes,45001,opt,name=message",
		Filename:      "orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*RpcOptions)(nil),
		Field:         45002,
		Name:          "orm.rpcs",
		Tag:           "bytes,45002,opt,name=rpcs",
		Filename:      "orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOptions)(nil),
		Field:         45003,
		Name:          "orm.field",
		Tag:           "bytes,45003,opt,name=field",
		Filename:      "orm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*EdgeOptions)(nil),
		Field:         45004,
		Name:          "orm.edge",
		Tag:           "bytes,45004,opt,name=edge",
		Filename:      "orm.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional orm.FileOptions all = 45000;
	E_All = &file_orm_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional orm.MessageOptions message = 45001;
	E_Message = &file_orm_proto_extTypes[1]
	// optional orm.RpcOptions rpcs = 45002;
	E_Rpcs = &file_orm_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional orm.FieldOptions field = 45003;
	E_Field = &file_orm_proto_extTypes[3]
	// optional orm.EdgeOptions edge = 45004;
	E_Edge = &file_orm_proto_extTypes[4]
)

var File_orm_proto protoreflect.FileDescriptor

var file_orm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6f, 0x72, 0x6d,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x70, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x72, 0x70, 0x63, 0x73, 0x22,
	0x30, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x61, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x6f, 0x72, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xb5, 0x01,
	0x0a, 0x0b, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x12,
	0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e,
	0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x22, 0x9c, 0x02, 0x0a, 0x0e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x64, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63,
	0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x64, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x6d,
	0x2e, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x48, 0x01, 0x52, 0x03, 0x67, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x02, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70,
	0x63, 0x50, 0x61, 0x74, 0x63, 0x68, 0x48, 0x03, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63, 0x45, 0x72, 0x61, 0x73, 0x65,
	0x48, 0x04, 0x52, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x61, 0x64, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x61, 0x73, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x0a, 0x52, 0x70,
	0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x64, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63,
	0x41, 0x64, 0x64, 0x48, 0x01, 0x52, 0x03, 0x61, 0x64, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x03, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x6d,
	0x2e, 0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x48, 0x02, 0x52, 0x03, 0x67, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x03, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70,
	0x63, 0x50, 0x61, 0x74, 0x63, 0x68, 0x48, 0x04, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63, 0x45, 0x72, 0x61, 0x73, 0x65,
	0x48, 0x05, 0x52, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x64,
	0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x67, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x65, 0x72, 0x61, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x06, 0x52, 0x70, 0x63, 0x41, 0x64, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x24, 0x0a, 0x06,
	0x52, 0x70, 0x63, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x25, 0x0a, 0x07, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x70, 0x63,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x70, 0x63, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2a, 0x9a, 0x03,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x11, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x12, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x46, 0x49, 0x58, 0x45, 0x44, 0x33, 0x32, 0x10,
	0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x33,
	0x32, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41,
	0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x46, 0x49, 0x58,
	0x45, 0x44, 0x36, 0x34, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x49, 0x58, 0x45, 0x44, 0x36, 0x34, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x40, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x41, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x42, 0x1a, 0x02, 0x10, 0x01, 0x3a, 0x42, 0x0a, 0x03, 0x61, 0x6c,
	0x6c, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xc8, 0xdf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x3a, 0x50,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc9, 0xdf, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x3a, 0x46, 0x0a, 0x04, 0x72, 0x70, 0x63, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xca, 0xdf, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x52, 0x70, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x04, 0x72, 0x70, 0x63, 0x73, 0x3a, 0x48, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xcb, 0xdf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x3a, 0x45, 0x0a, 0x04, 0x65, 0x64, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcc, 0xdf, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x72, 0x6d, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x04, 0x65, 0x64, 0x67, 0x65, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x6f, 0x6d, 0x6e, 0x75, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x6f, 0x72, 0x6d, 0x3b, 0x6f, 0x72, 0x6d, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orm_proto_rawDescOnce sync.Once
	file_orm_proto_rawDescData = file_orm_proto_rawDesc
)

func file_orm_proto_rawDescGZIP() []byte {
	file_orm_proto_rawDescOnce.Do(func() {
		file_orm_proto_rawDescData = protoimpl.X.CompressGZIP(file_orm_proto_rawDescData)
	})
	return file_orm_proto_rawDescData
}

var file_orm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_orm_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_orm_proto_goTypes = []any{
	(Type)(0),                           // 0: orm.Type
	(*FileOptions)(nil),                 // 1: orm.FileOptions
	(*FileMessageOptions)(nil),          // 2: orm.FileMessageOptions
	(*MessageOptions)(nil),              // 3: orm.MessageOptions
	(*FieldOptions)(nil),                // 4: orm.FieldOptions
	(*EdgeOptions)(nil),                 // 5: orm.EdgeOptions
	(*SelectOptions)(nil),               // 6: orm.SelectOptions
	(*FileRpcOptions)(nil),              // 7: orm.FileRpcOptions
	(*RpcOptions)(nil),                  // 8: orm.RpcOptions
	(*RpcAdd)(nil),                      // 9: orm.RpcAdd
	(*RpcGet)(nil),                      // 10: orm.RpcGet
	(*RpcList)(nil),                     // 11: orm.RpcList
	(*RpcPatch)(nil),                    // 12: orm.RpcPatch
	(*RpcErase)(nil),                    // 13: orm.RpcErase
	(*Index)(nil),                       // 14: orm.Index
	(*descriptorpb.FileOptions)(nil),    // 15: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 16: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 17: google.protobuf.FieldOptions
}
var file_orm_proto_depIdxs = []int32{
	2,  // 0: orm.FileOptions.messages:type_name -> orm.FileMessageOptions
	7,  // 1: orm.FileOptions.rpcs:type_name -> orm.FileRpcOptions
	14, // 2: orm.MessageOptions.indexes:type_name -> orm.Index
	0,  // 3: orm.FieldOptions.type:type_name -> orm.Type
	6,  // 4: orm.EdgeOptions.select:type_name -> orm.SelectOptions
	9,  // 5: orm.FileRpcOptions.add:type_name -> orm.RpcAdd
	10, // 6: orm.FileRpcOptions.get:type_name -> orm.RpcGet
	11, // 7: orm.FileRpcOptions.list:type_name -> orm.RpcList
	12, // 8: orm.FileRpcOptions.patch:type_name -> orm.RpcPatch
	13, // 9: orm.FileRpcOptions.erase:type_name -> orm.RpcErase
	9,  // 10: orm.RpcOptions.add:type_name -> orm.RpcAdd
	10, // 11: orm.RpcOptions.get:type_name -> orm.RpcGet
	11, // 12: orm.RpcOptions.list:type_name -> orm.RpcList
	12, // 13: orm.RpcOptions.patch:type_name -> orm.RpcPatch
	13, // 14: orm.RpcOptions.erase:type_name -> orm.RpcErase
	15, // 15: orm.all:extendee -> google.protobuf.FileOptions
	16, // 16: orm.message:extendee -> google.protobuf.MessageOptions
	16, // 17: orm.rpcs:extendee -> google.protobuf.MessageOptions
	17, // 18: orm.field:extendee -> google.protobuf.FieldOptions
	17, // 19: orm.edge:extendee -> google.protobuf.FieldOptions
	1,  // 20: orm.all:type_name -> orm.FileOptions
	3,  // 21: orm.message:type_name -> orm.MessageOptions
	8,  // 22: orm.rpcs:type_name -> orm.RpcOptions
	4,  // 23: orm.field:type_name -> orm.FieldOptions
	5,  // 24: orm.edge:type_name -> orm.EdgeOptions
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	20, // [20:25] is the sub-list for extension type_name
	15, // [15:20] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_orm_proto_init() }
func file_orm_proto_init() {
	if File_orm_proto != nil {
		return
	}
	file_orm_proto_msgTypes[2].OneofWrappers = []any{}
	file_orm_proto_msgTypes[3].OneofWrappers = []any{}
	file_orm_proto_msgTypes[6].OneofWrappers = []any{}
	file_orm_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_orm_proto_goTypes,
		DependencyIndexes: file_orm_proto_depIdxs,
		EnumInfos:         file_orm_proto_enumTypes,
		MessageInfos:      file_orm_proto_msgTypes,
		ExtensionInfos:    file_orm_proto_extTypes,
	}.Build()
	File_orm_proto = out.File
	file_orm_proto_rawDesc = nil
	file_orm_proto_goTypes = nil
	file_orm_proto_depIdxs = nil
}
